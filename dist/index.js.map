{"version":3,"sources":["../src/classes/malt.ts","../src/classes/malts/account.ts","../src/classes/malts/agent.ts","../src/classes/malts/analytic.ts","../src/classes/malts/analytics.ts","../src/classes/malts/bid.ts","../src/classes/malts/block.ts","../src/classes/malts/book.ts","../src/classes/malts/chart.ts","../src/classes/malts/claimable.ts","../src/classes/malts/coin.ts","../src/classes/malts/fault.ts","../src/classes/malts/errors.ts","../src/classes/malts/extensions.ts","../src/classes/malts/filters.ts","../src/classes/malts/json.ts","../src/classes/malts/keys.ts","../src/classes/malts/layout.ts","../src/classes/malts/mailer.ts","../src/classes/malts/message.ts","../src/classes/malts/mimes.ts","../src/classes/malts/params.ts","../src/classes/malts/query.ts","../src/classes/malts/route.ts","../src/classes/malts/section.ts","../src/classes/malts/share.ts","../src/classes/malts/trade.ts"],"sourcesContent":["import crypto from 'crypto';\r\nimport { parsePhoneNumberFromString, CountryCode } from 'libphonenumber-js';\r\nimport { MaltInterface } from '../interfaces/malt';\r\n\r\nexport default class Malt implements MaltInterface {\r\n    [key: string]: any;\r\n\r\n    constructor(a: {[key: string]:any } = {}) { this.mergeArgs(a); }\r\n\r\n    addslashes(str: string): string { return str.replace(/(['\"\\\\])/g, '\\\\$1').replace(/\\0/g, '\\\\0'); }\r\n    \r\n    amPm(v: string): string { const o = this.parseDate(v); const h = o.getHours(); return h >= 12 ? \"pm\" : \"am\"; }\r\n  \r\n    arrayContains<T>(t: T[], v: T): boolean { return t.includes(v); }\r\n  \r\n    arrayIndex<T>(a: T[], v: T): number { return a.indexOf(v); }\r\n  \r\n    arrayLen<T>(t: T[]): number { return t.length; }\r\n  \r\n    arraySort(a: any[], t: 'numeric' | 'string' = 'numeric', o: 'asc' | 'desc' = 'asc'): any[] {\r\n      const na = [...a];    \r\n      if (o === 'desc') {\r\n        if (t === 'numeric') { na.sort((x, y) => y - x); }\r\n        else { na.sort((x, y) => y.localeCompare(x)); }\r\n      } \r\n      else {\r\n        if (t === 'numeric') { na.sort((x, y) => x - y); } \r\n        else { na.sort((x, y) => x.localeCompare(y)); }\r\n      }    \r\n      return na;\r\n    }\r\n\r\n    asciiPeriod(): string { return String.fromCharCode(46); }\r\n\r\n    asciiPound(): string { return String.fromCharCode(35); }\r\n\r\n    asciiAmper(): string { return String.fromCharCode(38); }\r\n\r\n    asciiTab(): string { return String.fromCharCode(9); }\r\n\r\n    asciiCr(): string { return String.fromCharCode(13); }\r\n\r\n    asciiLf(): string { return String.fromCharCode(10); }\r\n\r\n    asciiCrlf(): string { return String.fromCharCode(13) + String.fromCharCode(10); }\r\n\r\n    asciiDquote(): string { return String.fromCharCode(34); }\r\n\r\n    asciiComma(): string { return String.fromCharCode(44); }\r\n\r\n    asciiSquote(): string { return String.fromCharCode(39); }\r\n\r\n    asciiSpace(): string { return String.fromCharCode(32); }\r\n\r\n    asciiDash(): string { return String.fromCharCode(45); }\r\n\r\n    asciiSemi(): string { return String.fromCharCode(59); }\r\n\r\n    asciiQmark(): string { return String.fromCharCode(63); }\r\n\r\n    asciiBslash(): string { return String.fromCharCode(92); }\r\n\r\n    asciiFslash(): string { return String.fromCharCode(47); }\r\n\r\n    asciiUnderscore(): string { return String.fromCharCode(95); }\r\n\r\n    byteConvert(n: number, u: string = \"\"): string {\r\n      if (!this.isNumeric(n) || n < 0) { return \"Invalid size argument\"; }\r\n      const k = 1024;\r\n      const m = 1048576;\r\n      const g = 1073741824;\r\n      let r = 0;  \r\n      if (u === \"\") {\r\n        if (n < k) { u = \"bytes\"; r = n; } \r\n        else if (n < m) { u = \"KB\"; r = n / k; } \r\n        else if (n < g) { u = \"MB\"; r = n / m; } \r\n        else { u = \"GB\"; r = n / g; }\r\n      }\r\n      return `${r.toFixed(2)} ${u}`;\r\n    }\r\n\r\n    calculateSpread(b: any, a: any): number {\r\n      let bid = isNaN(Number(b)) ? 0 : Number(b);\r\n      let ask = isNaN(Number(a)) ? 0 : Number(a);\r\n      let spread = 0;    \r\n      if (bid > 0 && ask > 0) { spread = this.formatTrecimal((ask - bid) / ask); }    \r\n      return spread;\r\n    }\r\n\r\n    camelize(s: string): string {\r\n        let t = \"\";\r\n        const a = s.split('_');\r\n        for(const k of a) {\r\n            let v = this.capitalizeFirst(k);\r\n            t += v;\r\n        }\r\n        return t;\r\n    }\r\n\r\n    capitalizeFirst(s: string): string { if(!s) return ''; return s.charAt(0).toUpperCase() + s.slice(1); }\r\n\r\n    chr(ascii: number): string { return String.fromCharCode(ascii); }\r\n\r\n    cleanBreaks(t: string): string { return t.replace(/(\\r\\n|\\r|\\n)/g, '').trim(); }\r\n\r\n    cleanData(s: string): string {\r\n      s = s.replace(/\\t/g, '\\\\t');\r\n      s = s.replace(/\\r?\\n/g, '\\\\n');\r\n      if (s.includes('\"')) { s = '\"' + s.replace(/\"/g, '\"\"') + '\"'; }\r\n      return s;\r\n    }\r\n\r\n    cleanEntryHtml(h: string): string { return h.replace(/<!DOCTYPE html>|<\\/?html>|<\\/?head>|<\\/?body>/g, \"\").trim(); }\r\n    \r\n    cleanFilename(f: string): string {\r\n      f = f.trim();\r\n      f = this.convertAscii(f);    \r\n      const replacements: [string, string][] = [[' ', '_'], ['#', ''], ['&', ''], [\"'\", ''], ['\"', ''], ['?', ''], [',', ''], ['\\t', '_'], [';', ''], ['$', ''], ['*', ''], ['Ãº', '']];\r\n      for (const [search, replace] of replacements) { f = f.replace(new RegExp(search, 'g'), replace); }\r\n      return f.trim();\r\n    }\r\n\r\n    cleanUrl(u: string): string { u = u.replace('http://', '').replace('https://', ''); return u.trim(); }\r\n\r\n    contains(needle: string, haystack: string): boolean { return haystack.toLowerCase().includes(needle.toLowerCase()); }\r\n\r\n    convertAscii(t: string): string {\r\n      const search = ['\\u2018', '\\u2019', '\\u201C', '\\u201D', '\\u2013', '\\u2014', '\\u20AC', '\\u00B7', '\\u2026'];\r\n      const replace = [\"'\", \"'\", '\"', '\"', '--', '---', '*', '*', '...'];\r\n      for (let i = 0; i < search.length; i++) { t = t.replace(new RegExp(search[i], 'g'), replace[i]); }\r\n      t = t.replace(/[^\\x01-\\x7F]/g, '');\r\n      return t.trim();\r\n    }\r\n\r\n    countKeys(): number { return Object.keys(this).length; }\r\n    \r\n    countStringTokens(s: string, delimiter: string = ','): number { const tokens = s.split(delimiter); return tokens.length; }\r\n\r\n    createDatePath(ps: string = '\\\\'): string { return this.year().toString() + ps + this.zeroPad(this.month().toString(), 2) + ps + this.zeroPad(this.day().toString(), 2); }\r\n\r\n    createMalt(a: {[key: string]:any } = {}): MaltInterface { return new Malt(a); }\r\n\r\n    createShort(t: string): string {\r\n        let s = this.left(t.trim().toLowerCase().replace(/ /g, '-'), 36);\r\n        if (this.right(s, 1) === '-') { s = this.left(s, s.length - 1); }\r\n        return this.cleanFilename(s);\r\n    }\r\n  \r\n    createUuid(): string { return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => { const r = (Math.random() * 16) | 0; return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16); }); }\r\n\r\n    dateAdd(unit = 'day', amount = 1, date = new Date()): string {\r\n        const timeUnits: { [key: string]: number } = { second: 1, minute: 60, hour: 3600, day: 86400, week: 604800, month: 2620800, quarter: 7862400, year: 31449600 };\r\n        const dt = new Date(date).getTime() / 1000;\r\n        const timeUnit = timeUnits[unit] || 86400;\r\n        const increment = isNaN(amount) ? 1 : amount;\r\n        const newTime = Math.ceil(dt + timeUnit * increment);\r\n        const resultDate = new Date(newTime * 1000);\r\n        return `${resultDate.getFullYear()}-${String(resultDate.getMonth() + 1).padStart(2, '0')}-${String(resultDate.getDate()).padStart(2, '0')} ${String(resultDate.getHours()).padStart(2, '0')}:${String(resultDate.getMinutes()).padStart(2, '0')}:${String(resultDate.getSeconds()).padStart(2, '0')}`;\r\n    }\r\n\r\n    dateCompare(date1: string, date2: string): number {\r\n        const d1 = Date.now() - new Date(date1).getTime();\r\n        const d2 = Date.now() - new Date(date2).getTime();    \r\n        if (d1 < d2) { return -1; }\r\n        else if (d1 > d2) { return 1; }\r\n        else { return 0; }\r\n    }\r\n\r\n    dateSubtract(u: string = 'day', a: number = 1, d: string = 'now'): string {\r\n        const units: { [key: string]: number } = { second: 1, minute: 60, hour: 3600, day: 86400, week: 604800, month: 2620800, quarter: 7862400, year: 31449600 };    \r\n        let dt = new Date(d).getTime() / 1000;\r\n        let unitInSeconds = units[u] ?? 86400;\r\n        if (isNaN(a)) a = 1;    \r\n        const t = Math.ceil(dt - (unitInSeconds * a));      \r\n        const resultDate = new Date(t * 1000);\r\n        const year = resultDate.getFullYear();\r\n        const month = String(resultDate.getMonth() + 1).padStart(2, '0');\r\n        const day = String(resultDate.getDate()).padStart(2, '0');\r\n        const hours = String(resultDate.getHours()).padStart(2, '0');\r\n        const minutes = String(resultDate.getMinutes()).padStart(2, '0');\r\n        const seconds = String(resultDate.getSeconds()).padStart(2, '0');    \r\n        return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n    }\r\n\r\n    day(d: string = \"now\"): number { return this.parseDate(d).getDate(); }\r\n\r\n    dayAsString(d: string = 'now'): string {\r\n        const dayNumber = this.dayOfWeek(d);\r\n        let dayString: string;\r\n        switch(dayNumber) {\r\n            case 1: dayString = 'Sunday'; break;\r\n            case 2: dayString = 'Monday'; break;\r\n            case 3: dayString = 'Tuesday'; break;\r\n            case 4: dayString = 'Wednesday'; break;\r\n            case 5: dayString = 'Thursday'; break;\r\n            case 6: dayString = 'Friday'; break;\r\n            case 7: dayString = 'Saturday'; break;\r\n            default: dayString = ''; break;\r\n        }    \r\n        return dayString;\r\n    }\r\n\r\n    dayOfWeek(d: string = 'now'): number { const date = new Date(d); const day = date.getDay(); return day === 0 ? 7 : day; }\r\n\r\n    dayOfYear(d: string = 'now'): number {\r\n        const date = new Date(d);\r\n        const startOfYear = new Date(date.getFullYear(), 0, 0);\r\n        const diff = date.getTime() - startOfYear.getTime();\r\n        const oneDay = 1000 * 60 * 60 * 24;\r\n        return Math.floor(diff / oneDay) + 1;\r\n    }\r\n\r\n    daysInMonth(d: string = 'now'): number {\r\n        const month = this.month(d);\r\n        const year = this.year(d);\r\n        const lastDayOfMonth = new Date(year, month, 0);\r\n        return lastDayOfMonth.getDate();\r\n    }\r\n\r\n    decryptKey(t: string, k: string): string {\r\n        const algorithm = 'aes-256-ctr';\r\n        const key = Buffer.from(k, 'utf8');\r\n        const encryptedText = Buffer.from(t, 'base64');\r\n        const ivLength = 16;\r\n        const iv = encryptedText.subarray(0, ivLength);\r\n        const encrypted = encryptedText.subarray(ivLength);    \r\n        const decipher = crypto.createDecipheriv(algorithm, key, iv);\r\n        let decrypted = decipher.update(encrypted);\r\n        decrypted = Buffer.concat([decrypted, decipher.final()]);    \r\n        return decrypted.toString('utf8');\r\n    }\r\n\r\n    deepReplace(search: string[], str: string): string { search.forEach(s => { const regex = new RegExp(s, 'g'); str = str.replace(regex, ''); }); return str; }\r\n\r\n    encryptKey(plaintext: string, keyStr: string): string {\r\n        const algorithm = 'aes-256-ctr';\r\n        const key = Buffer.from(keyStr, 'utf8');\r\n        const iv = crypto.randomBytes(16);\r\n        const cipher = crypto.createCipheriv(algorithm, key, iv);\r\n        let encrypted = cipher.update(plaintext, 'utf8');\r\n        encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n        const encryptedText = Buffer.concat([iv, encrypted]).toString('base64');\r\n        return encryptedText;\r\n    }\r\n\r\n    escDbString(t: string): string {\r\n        let j = JSON.stringify(t.trim());\r\n        if (/(\\\\u[ed][0-9a-f]{3})/i.test(j)) {\r\n            j = j.replace(/(\\\\u[ed][0-9a-f]{3})/gi, '\\\\$1');\r\n            t = JSON.parse(j);\r\n        }    \r\n        return t.replace(/['\"\\\\]/g, '\\\\$&');\r\n    }\r\n\r\n    escBr(field: string): string {\r\n        field = field.replace(/<br\\/><br\\/><br\\/><br\\/>/g, '<br/><br/>');\r\n        field = field.replace(/<\\/li><br\\/><br\\/>/g, '</li>');\r\n        field = field.replace(/<ol><br\\/><br\\/>/g, '<ol>');\r\n        field = field.replace(/<ul><br\\/><br\\/>/g, '<ul>');\r\n        field = field.replace(/<\\/ol><br\\/><br\\/>/g, '</ol>');\r\n        field = field.replace(/<\\/ul><br\\/><br\\/>/g, '</ul>');\r\n        field = field.replace(/<\\/p><br\\/><br\\/>/g, '</p>');\r\n        return field;\r\n    }\r\n\r\n    escEmail(field: string): string { return field.replace('@', ' [at] ').replace('.', ' [dot] '); }\r\n\r\n    escHtml(field: string): string { return field ? field.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;') : ''; }\r\n\r\n    escLike(field: string): string { return field.replace(/[%_]/g, (match) => `\\\\${match}`); }\r\n\r\n    escLog(f: string): string { f = f.trim(); f = f.replace('\\n', ''); f = f.replace('\\r', ''); f = f.replace('  ', ' '); f = f.replace('\\t', ' '); f = f.trim(); return f.replace(/'/g, \"\\\\'\"); }\r\n\r\n    escSql(b: string): string { return b.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\").replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0'); }\r\n\r\n    escTextarea(field: string): string { return field.replace(/'/g, '&apos;'); }\r\n\r\n    escUrl(field: string): string { if (field === '') return field; let originalUrl = field; field = field.replace(/[^a-z0-9-~+_.?#=!&;,/:%@$\\|*'()\\\\x80-\\\\xff]/gi, ''); const strip = ['%0d', '%0a', '%0D', '%0A']; field = this.deepReplace(strip, field); field = field.replace(';//', '://'); if (field.indexOf(':') === -1 && !['/', '#', '?'].includes(field[0]) && !/^[a-z0-9-]+?\\.php/i.test(field)) { field = 'http://' + field; } return field; }\r\n\r\n    find(needle: string, haystack: string, startpos: number = 0): number { const pos = haystack.toLowerCase().indexOf(needle.toLowerCase(), startpos); return pos === -1 ? 0 : pos + 1; }\r\n\r\n    floatToFraction(n: number, tolerance: number = 1.e-9): { numerator: number, denominator: number, str_view: string } | false {\r\n        let h1 = 1; let h2 = 0; let k1 = 0; let k2 = 1; let b = 1 / n;      \r\n        do { b = 1 / b; const a = Math.floor(b); const aux = h1; h1 = a * h1 + h2; h2 = aux; const auxK = k1; k1 = a * k1 + k2; k2 = auxK; b = b - a; }\r\n        while (Math.abs(n - h1 / k1) > n * tolerance);    \r\n        if(h1 !== 0 && k1 !== 0) { return { numerator: h1, denominator: k1, str_view: `${h1}/${k1}`}; } \r\n        else { return false; }\r\n    }\r\n\r\n    formatCurrency(v: number | string): string {\r\n        let n = v;\r\n        const numValue = Number(v);\r\n        if(numValue !== Number.POSITIVE_INFINITY && !isNaN(numValue)) { n = `$${numValue.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`; }\r\n        return n as string;\r\n    }\r\n\r\n    formatDate(v: string | Date): string {\r\n        const date = new Date(v);\r\n        const month = String(date.getMonth() + 1).padStart(2, '0');\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const year = date.getFullYear();    \r\n        return `${month}/${day}/${year}`;\r\n    }\r\n\r\n    formatDecimal(v: number, precision: number = 2): number { return parseFloat(v.toFixed(precision)); }\r\n    \r\n    formatInteger(v: any): string { let n = '0'; if (!isNaN(v)) { n = Number(v).toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 }); } return n; }\r\n\r\n    formatIssuer(v: string | null): string { let i = ''; if (v !== null) { i = v; if (this.isStellarPublic(v)) { i = this.left(v, 4) + '...' + this.right(v, 4); } } return i; }\r\n\r\n    formatLcase(v: string): string { return v.toLowerCase(); }\r\n\r\n    formatLumens(v: any): number { let n = v; if (v !== 'â') { n = Number(v).toFixed(7); } return n; }\r\n\r\n    formatMaxChars(v: string, n: number = 30): string { return v.length <= n ? v : `${v.slice(0, n - 3)}...`; }\r\n\r\n    formatPhone(phone: string): string {\r\n        const cleaned = phone.replace(/\\D/g, '');\r\n        if(cleaned.length === 10) { return cleaned.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3'); }\r\n        if(cleaned.length > 10) { return '+' + cleaned; }\r\n        return phone;\r\n    }\r\n\r\n    formatPlusPhone(phone: string, defaultCountry: CountryCode = 'US'): string {\r\n        const phoneNumber = parsePhoneNumberFromString(phone, defaultCountry);\r\n        if (phoneNumber) {\r\n            return phoneNumber.formatInternational();\r\n        }\r\n        return phone;\r\n    }\r\n\r\n    formatStroops(v: number): string { return v.toFixed(8); }\r\n\r\n    formatTime(v: string | Date): string { return this.getTimeShort(v); }\r\n\r\n    formatTcase(v: string): string { return this.titleCase(v); }\r\n\r\n    formatTrecimal(value: number): number { return parseFloat(value.toFixed(3)); }\r\n\r\n    formatUcase(v: string) : string { return v.toUpperCase(); }\r\n\r\n    formatYesNo(b: boolean | number): string { return this.yesNoFormat(b); }\r\n\r\n    generateCode(prefix: string = 'CMMN'): string {\r\n        if(prefix.length !== 4) { throw new Error('Prefix must be exactly 4 characters long.'); }    \r\n        const rand5 = Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000; \r\n        const rand4 = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\r\n        const rand3 = Math.floor(Math.random() * (999 - 100 + 1)) + 100;    \r\n        const year = new Date().getFullYear();\r\n        const month = this.zeroPad(Number(new Date().getMonth() + 1).toString(), 2);\r\n        const day = this.zeroPad(Number(new Date().getDate()).toString(), 2);\r\n        const hour = this.zeroPad(Number(new Date().getHours()).toString(), 2);    \r\n        return `${prefix}${rand5}Y${year}M${month}${rand4}D${day}${rand3}H${hour}`;\r\n    }\r\n\r\n    generateDesKey(): string {\r\n        let t = '';\r\n        const v = 'aeuyAEUY';\r\n        const c = 'bdghjmnpqrstvzBDGHJLMNPQRSTVWXZ';\r\n        let a = Math.floor(Date.now() / 1000) % 2;      \r\n        for (let i = 0; i < 8; i++) {\r\n            if(a === 1) { t += c[Math.floor(Math.random() * c.length)]; a = 0; } \r\n            else { t += v[Math.floor(Math.random() * v.length)]; a = 1; }\r\n        }\r\n        return t.substring(0, 2);\r\n    }\r\n\r\n    generateOrderNumber(): string {\r\n        const i = Math.floor(Math.random() * (99999 - 10000 + 1)) + 10000; \r\n        const n = this.generateRandomString(3);      \r\n        const year = new Date().getFullYear();\r\n        const month = String(new Date().getMonth() + 1).padStart(2, '0'); \r\n        const day = String(new Date().getDate()).padStart(2, '0');\r\n        const hour = String(new Date().getHours()).padStart(2, '0');\r\n        const minute = String(new Date().getMinutes()).padStart(2, '0');      \r\n        return `${n.toUpperCase()}${year}${month}${day}${hour}${minute}${i}D`;\r\n    }\r\n\r\n    generatePassword(l: number = 8): string {\r\n        const a = 'aeuyAEUYbdghjmnpqrstvzBDGHJLMNPQRSTVWXZ23456789';\r\n        const n = a.length;\r\n        let t = '';      \r\n        for (let i = 0; i < l; i++) {\r\n            let k = a[Math.floor(Math.random() * n)];\r\n            if(i === 1 && /\\d/.test(k)) { i--; } \r\n            else { t += k; }\r\n        }    \r\n        return t;\r\n    }\r\n\r\n    generateRandomString(l: number = 10): string {\r\n        const s = 'abcdefghijklmnopqrstuvwxyz';\r\n        const c = s.length;\r\n        let r = '';      \r\n        for (let i = 0; i < l; i++) { r += s[Math.floor(Math.random() * c)]; }\r\n        return r;\r\n    }\r\n\r\n    getBase64Extension(t: string): string {\r\n        let x = '';\r\n        const l = t.substring(0, 12);\r\n        if (l === 'data:image/p') { x = 'png'; }\r\n        else if (l === 'data:image/g') { x = 'gif'; }\r\n        else if (l === 'data:image/j') { x = 'jpg'; }\r\n        return x;\r\n    }\r\n\r\n    getCgiValue(key: string): string | undefined { return process.env[key]; }\r\n\r\n    getClientAgent(): string | undefined { return process.env['HTTP_USER_AGENT']; }\r\n\r\n    getColorspaceLabel(n: number): string { const colorSpaceMap: { [key: number]: string } = { 1: 'MASKED', 2: '1BIT', 4: 'GREY', 8: 'PALETTE', 16: 'RGB', 17: 'RGB with mask', 32: 'CMYK', 33: 'CMYK with mask', 64: 'LAB', 128: 'RGBHIGH' }; return colorSpaceMap[n] || ''; }\r\n\r\n    getDateBlog(d: string | Date): string { const date = new Date(d); const datePart = date.toISOString().split('T')[0]; const timePart = date.toTimeString().split(' ')[0]; return `${datePart}T${timePart}Z`; }\r\n\r\n    getDateCalendar(d: string | Date): string { const date = new Date(d); return date.toISOString().split('T')[0]; }\r\n\r\n    getDateDashed(d: string | Date): string { const date = new Date(d); return date.toISOString().split('T')[0]; }\r\n\r\n    getDateDigitsNow(): string { const year = this.year(); const month = this.zeroPad(this.month().toString(), 2); const day = this.zeroPad(this.day().toString(), 2); return `${year}${month}${day}`; }\r\n\r\n    getDateEdition(d: string | Date): string { const date = new Date(d); const day = date.toLocaleString('default', { weekday: 'short' }); const dayOfMonth = String(date.getDate()).padStart(2, '0'); const month = date.toLocaleString('default', { month: 'short' }); const year = date.getFullYear(); return `${day}, ${dayOfMonth} ${month} ${year}`; }\r\n\r\n    getDateKeyNow(): string { const now = new Date(); const date = now.toISOString().split('T')[0]; return `date-${date}`; }\r\n\r\n    getDateLog(d: string | Date): string { const date = new Date(d); const month = String(date.getMonth() + 1).padStart(2, '0'); const day = String(date.getDate()).padStart(2, '0'); const year = date.getFullYear(); const time = date.toTimeString().split(' ')[0]; return `${month}/${day}/${year} ${time}`; }\r\n\r\n    getDateLong(d: string | Date): string { const date = new Date(d); const datePart = date.toISOString().split('T')[0]; const timePart = date.toTimeString().split(' ')[0]; return `${datePart} ${timePart}`; }\r\n\r\n    getDateMilitary(d: string | Date): string { const date = new Date(d); const day = String(date.getDate()).padStart(2, '0'); const month = date.toLocaleString('default', { month: 'short' }); const year = date.getFullYear(); return `${day} ${month} ${year}`; }\r\n\r\n    getDateNow(): string { const now = new Date(); const date = now.toISOString().split('T')[0]; const time = now.toTimeString().split(' ')[0]; return `${date} ${time}`; }\r\n\r\n    getDateRfc(d: string | Date): string { const date = new Date(d); return date.toUTCString().replace('GMT', '+0000'); }\r\n\r\n    getDateShort(d: string | Date): string { const date = new Date(d); const month = String(date.getMonth() + 1).padStart(2, '0'); const day = String(date.getDate()).padStart(2, '0'); const year = date.getFullYear(); return `${month}/${day}/${year}`; }\r\n\r\n    getFixedSizeFromPercent(pct: number, total: number, pad: number = 0): number { const x = Math.floor((pct * total) / 100 - pad); return x; }\r\n\r\n    getFormattedDateTime(d: string): string {\r\n        const date = new Date(d);\r\n        const formattedDate = date.toLocaleDateString('en-US');\r\n        const formattedTime = date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true, }).toLowerCase(); \r\n        return `${formattedDate} at ${formattedTime}`;\r\n    }\r\n\r\n    getGlobalConstant(d: string): any { const v = (global as any)[d]; return v !== undefined ? v : false; }\r\n    \r\n    getMatchingParen(str: string, startPos: number): number | undefined { const count = str.length; let bracket = 1; for (let i = startPos; i < count; i++) { if (str[i] === '(') { bracket++; } else if (str[i] === ')') { bracket--; } if (bracket === 0) { return i; } } return undefined; }\r\n    \r\n    getObjectByKey(a: {[key: string]: any}[], k: string, v: string | number | boolean): {[key: string]: any} {\r\n        let p = {};\r\n        const l = a.length;\r\n        for(let i=0; i<l; i++) {\r\n            let r: {[key: string]: any} = a[i];\r\n            if(r.hasOwnProperty(k)) {\r\n                let x = r[k];\r\n                if(x === v) { let p = r; break; }\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    getPrefixObject(p: string): {[key: string]: any} { \r\n        let a: {[key: string]: any} = {}; \r\n        const ks = this.keysArray();\r\n        for(let i=0; i<ks.length; i++) {\r\n            let k = ks[i];\r\n            let v = this[k];\r\n            if(this.left(k, p.length) == p) { a[k] = v; }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    getPropertyValue(k: string): any { return this.hasProperty(k) ? this[k] : \"\"; }\r\n\r\n    getShortDateNow(): string { const date = new Date(); return date.toLocaleDateString('en-US'); }\r\n\r\n    getTimeLong(d: string | Date): string { const date = new Date(d); return date.toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false, }); }\r\n\r\n    getTimeShort(d: string | Date): string {\r\n        const date = new Date(d);\r\n        return date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false, }); \r\n    }\r\n\r\n    hasProperty(k: string): boolean { return Object.prototype.hasOwnProperty.call(this, k); }\r\n    \r\n    hour(d: string = \"now\"): number { return this.parseDate(d).getHours(); }\r\n\r\n    isAlphanum(s: string): number { return /^[a-zA-Z0-9]+$/.test(s) ? 1 : 0; }\r\n\r\n    isArray(v: any): boolean { return Array.isArray(v); }\r\n  \r\n    isBoolean(v: any): boolean { return typeof v === \"boolean\"; }\r\n  \r\n    isDate(v: any): boolean { return v instanceof Date && !isNaN(v.getTime()); }\r\n    \r\n    isEmail(t: string): number { const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/; return emailRegex.test(t) ? 1 : 0; }\r\n\r\n    isFuture(time: string | Date): boolean { const timeStamp = new Date(time).getTime(); return timeStamp > Date.now(); }\r\n\r\n    isJson(str: string): boolean { try { JSON.parse(str); return true; } catch (e) { return false; } }\r\n\r\n    isLeapYear(d: string = 'now'): boolean { const date = new Date(d); const year = date.getFullYear(); return (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)); }\r\n\r\n    isNull(v: any): boolean { let r = false; if(v === null) { r = true; } return r; }\r\n\r\n    isNumeric(v: any): boolean { return !isNaN(Number(v)); }\r\n    \r\n    isObject(v: any): boolean { return typeof v === \"object\" && v !== null; }\r\n    \r\n    isPast(time: string | Date): boolean { const timeStamp = new Date(time).getTime(); return timeStamp < Date.now(); }\r\n\r\n    isSet(o: object, k: string): boolean { return o.hasOwnProperty(k); }\r\n\r\n    isSimple(value: unknown): boolean { return value !== null && value !== undefined && typeof value !== \"object\" && typeof value !== \"function\"; }\r\n\r\n    isStellarPublic(v: string): number { return v.length === 56 && v.startsWith('G') ? 1 : 0; }\r\n\r\n    isStellarSecret(v: string): number { return v.length === 56 && v.startsWith('S') ? 1 : 0; }\r\n\r\n    isToday(time: string | Date): boolean { const inputDate = new Date(time); const today = new Date(); return inputDate.toDateString() === today.toDateString(); }\r\n\r\n    isUUID(value: string): boolean { const regex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i; return regex.test(value); }\r\n\r\n    isUsPhone(p: string): number { const regex = /^\\(?(\\d{3})\\)?[-\\. ]?(\\d{3})[-\\. ]?(\\d{4})$/; return regex.test(p) ? 1 : 0; }\r\n\r\n    keysArray(): string[] { return Object.keys(this); }\r\n    \r\n\r\n    left(s: string, n: number): string { return s.slice(0, n); }\r\n    \r\n    lcase(t: string): string { return t.toLowerCase(); }\r\n\r\n    len(str: string): number { return str.length; }\r\n\r\n    listContains(fld: string, str: string, delims: string = ','): number { const parts = new Set(fld.split(delims).map(part => part.toLowerCase())); return parts.has(str.toLowerCase()) ? 1 : 0; }\r\n\r\n    listFind(list: string, value: string, delims: string = ','): number { const newList = list.split(delims); const pos = newList.indexOf(value); return pos === -1 ? -1 : pos; }\r\n\r\n    listFindNoCase(list: string, value: string, delims: string = ','): number { const lList = list.toLowerCase(); const lValue = value.toLowerCase(); const newList = lList.split(delims); const pos = newList.findIndex(token => token === lValue); return pos === -1 ? -1 : pos; }\r\n\r\n    listFirst(list: string, delims: string = ','): string { const newList = list.split(delims); return newList.length >= 1 ? newList[0] : list; }\r\n\r\n    listGetAt(list: string, pos: number, delims: string = ','): string { const aList = list.split(delims); const adjustedPos = pos > 0 ? pos - 1 : 0; return adjustedPos < aList.length ? aList[adjustedPos] : ''; }\r\n\r\n    listLast(list: string, delims: string = ','): string { const newList = list.split(delims); return newList.length > 0 ? newList[newList.length - 1] : list; }\r\n\r\n    listProperties(): string[] { return Object.keys(this); }\r\n\r\n    listPropertyObjects(): Record<string, any> {\r\n        let o: Record<string, any> = {};\r\n        const ks = this.keysArray();\r\n        for(let i=0; i<ks.length; i++) {\r\n            let k = ks[i];\r\n            let v = this[k];\r\n            if(this.isObject(v)) { o[k] = v; }\r\n        }\r\n        return o;\r\n    }\r\n\r\n    menuCurrencies(): { [key: string]: string } { return { USD: 'US Dollar' }; }\r\n\r\n    menuHours(): { [key: string]: string } { let b: { [key: string]: string } = {}; let t = ''; let h = 0; for (let i = 0; i < 24; i++) { if (i > 12) { t = 'PM'; h = i - 12; } else { h = i; t = 'AM'; } let v = h.toString() + ':' + t; let k = this.zeroPad(i.toString(), 2) + ':00:00'; b[k] = v; } return b; }\r\n    \r\n    menuImages(): { [key: string]: string } { return { bmp: 'image/bmp',eps: 'image/eps',gif: 'image/gif',jpg: 'image/jpg',png: 'image/png',psd: 'image/psd',tif: 'image/tif' }; }\r\n\r\n    menuLevels(): string[] { return ['Guest','Standard','Premium','Consultant','Administrator','Developer']; }\r\n\r\n    menuMonths(): { [key: string]: string } { return { '01': 'January (01)', '02': 'February (02)', '03': 'March (03)', '04': 'April (04)', '05': 'May (05)', '06': 'June (06)', '07': 'July (07)', '08': 'August (08)', '09':  'September (09)', '10': 'October (10)', '11': 'November (11)', '12': 'December (12)' }; }\r\n\r\n    menuSalutations(): { [key: string]: string } { return { 'Dr.': 'Doctor','Hon.': 'Honorable','Master': 'Master','Mr.': 'Mister','Miss': 'Miss','Ms.': 'Miss','Mrs.': 'Misses','Rev.': 'Reverend' }; }\r\n\r\n    menuStates(): { [key: string]: string } { return { AL: \"Alabama\", AR: \"Arkansas\", AZ: \"Arizona\", CA: \"California\", CO: \"Colorado\", CT: \"Connecticut\", DC: \"District of Columbia\", DE: \"Delaware\", FL: \"Florida\", GA: \"Georgia\", HI: \"Hawaii\", IA: \"Iowa\", ID: \"Idaho\", IL: \"Illinois\", IN: \"Indiana\", KS: \"Kansas\", KY: \"Kentucky\", LA: \"Louisiana\", MA: \"Massachusetts\", MD: \"Maryland\", ME: \"Maine\", MI: \"Michigan\", MN: \"Minnesota\", MO: \"Missouri\", MS: \"Mississippi\", MT: \"Montana\", NC: \"North Carolina\", ND: \"North Dakota\", NE: \"Nebraska\", NH: \"New Hampshire\", NJ: \"New Jersey\", NM: \"New Mexico\", NV: \"Nevada\", NY: \"New York\", OH: \"Ohio\", OK: \"Oklahoma\", OR: \"Oregon\", PA: \"Pennsylvania\", RI: \"Rhode Island\", SC: \"South Carolina\", SD: \"South Dakota\", TN: \"Tennessee\", TX: \"Texas\", UT: \"Utah\", VA: \"Virginia\", VT: \"Vermont\", WA: \"Washington\", WI: \"Wisconsin\", WV: \"West Virginia\", WY: \"Wyoming\" }; }\r\n\r\n    menuTimes(): { [key: string]: string } {\r\n      const b: { [key: string]: string } = {};\r\n       for(let i = 0; i < 24; i++) {\r\n        for (let j = 0; j < 60; j += 5) {\r\n          let t = '';\r\n          let h = i;\r\n          if (i >= 12) { t = 'PM'; if (i > 12) h = i - 12; } \r\n          else { t = 'AM'; }          \r\n          const v = `${h}:${this.zeroPad(j.toString(), 2)}${t}`;\r\n          const k = `${this.zeroPad(i.toString(), 2)}:${this.zeroPad(j.toString(), 2)}:00`;\r\n          b[k] = v;\r\n        }\r\n      }    \r\n      return b;\r\n    }\r\n\r\n    menuYears(): { [key: number]: number } {\r\n      const b: { [key: number]: number } = {};\r\n      const y = new Date().getFullYear();\r\n      const z = y + 7;      \r\n      for(let i = y; i < z; i++) { b[i] = i; }\r\n      return b;\r\n    }\r\n\r\n    mergeArgs(a: Record<string, any>): void { Object.keys(a).forEach((k) => this.setPropertyValue(k, a[k])); }\r\n    \r\n    mergeObjects(o1: object, o2: object): object { return { ...o1, ...o2 }; }\r\n\r\n    mergeProperties(o: Record<string, any>): void { \r\n      Object.keys(o).forEach((k) => { \r\n        if (this.hasProperty(k)) { this.setPropertyValue(k, o[k]); } \r\n      }); \r\n    }\r\n\r\n    microtimeFloat(): number { return Date.now() / 1000;  }\r\n\r\n    minute(d: string = \"now\"): number { return this.parseDate(d).getMinutes(); }\r\n\r\n    month(d: string = \"now\"): number { return this.parseDate(d).getMonth() + 1; }\r\n    \r\n    monthAbbrev(n: number): string {\r\n      let m = 'DEC';\r\n      switch (n) {\r\n        case 1: m = 'JAN'; break;\r\n        case 2: m = 'FEB'; break;\r\n        case 3: m = 'MAR'; break;\r\n        case 4: m = 'APR'; break;\r\n        case 5: m = 'MAY'; break;\r\n        case 6: m = 'JUN'; break;\r\n        case 7: m = 'JUL'; break;\r\n        case 8: m = 'AUG'; break;\r\n        case 9: m = 'SEP'; break;\r\n        case 10: m = 'OCT'; break;\r\n        case 11: m = 'NOV'; break;\r\n      }\r\n      return m;\r\n    }\r\n\r\n    monthAsString(d: string = 'now'): string { const date = d === 'now' ? new Date() : new Date(d); const options: Intl.DateTimeFormatOptions = { month: 'long' }; return date.toLocaleString('en-US', options); }\r\n\r\n    monthStringFromNumber(n: number): string {\r\n      let m = 'December';\r\n      switch (n) {\r\n        case 1: m = 'January'; break;\r\n        case 2: m = 'February'; break;\r\n        case 3: m = 'March'; break;\r\n        case 4: m = 'April'; break;\r\n        case 5: m = 'May'; break;\r\n        case 6: m = 'June'; break;\r\n        case 7: m = 'July'; break;\r\n        case 8: m = 'August'; break;\r\n        case 9: m = 'September'; break;\r\n        case 10: m = 'October'; break;\r\n        case 11: m = 'November'; break;\r\n      }\r\n      return m;\r\n    }\r\n\r\n    now(): number { return Date.now(); }\r\n\r\n    numberFormat(number: number, decimals: number = 0, decimalSeparator: string = \".\", thousandsSeparator: string = \",\"): string {\r\n        if(!isFinite(number)) { throw new Error(\"Invalid number input.\"); }\r\n        let formattedNumber = number.toFixed(decimals);\r\n        let [integerPart, decimalPart] = formattedNumber.split(\".\");\r\n        integerPart = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparator);\r\n        return decimalPart ? integerPart + decimalSeparator + decimalPart : integerPart;\r\n    }\r\n\r\n    parseCoinAlpha(coinId: string): string {\r\n        let x = '';\r\n        if(coinId === 'XLM' || coinId === 'native') { x = 'native'; } \r\n        else { const d = this.parseCoinCode(coinId); if (d.length <= 4) { x = 'credit_alphanum4'; } else { x = 'credit_alphanum12'; } }\r\n        return x;\r\n    }\r\n  \r\n    parseCoinCode(coinId: string): string {\r\n        let x = '';\r\n        if (coinId === 'XLM' || coinId === 'native') { x = 'XLM'; } \r\n        else { const s = coinId.length; if(s > 56) { const l = s - 56; x = coinId.slice(0, l); } }\r\n        return x;\r\n    }\r\n  \r\n    parseCoinIssuer(coinId: string): string {\r\n        let x = '';\r\n        if(coinId === 'XLM' || coinId === 'native') { x = 'native'; } \r\n        else { const s = coinId.length; if (s > 56) { x = coinId.slice(-56); } }\r\n        return x;\r\n    }\r\n  \r\n    parseDate(x: string | Date): Date { if(x instanceof Date) { return x; } if (x === \"now\") { return new Date(); } return new Date(x); }\r\n      \r\n    plural(v: string): string {\r\n        if (v.endsWith('y')) { v = v.slice(0, v.length - 1) + 'ies'; } \r\n        else if (v.endsWith('s')) { v = v + 'es'; } \r\n        else { v = v + 's'; }\r\n        return v;\r\n    }\r\n  \r\n    quotedArrayList(a: string[]): string {\r\n        let l = '';\r\n        a.forEach((i, index) => { if(index > 0) { l += ','; } l += `'${i.replace(/'/g, \"\\\\'\")}`;  });\r\n        return l;\r\n    }\r\n  \r\n    quotedValueList(l: string, d: string = ','): string {\r\n        let q = '';\r\n        if(l !== '') {\r\n          const a = l.split(d);  \r\n          const i = a.length;    \r\n          a.forEach((v, index) => { q += `\"${v}\"`; if (index < i - 1) { q += d; } });\r\n        }\r\n        return q;\r\n    }\r\n\r\n    replaceKeys(o: Record<string, any>, n: string, r: string): Record<string, any> {\r\n        const a = Object.keys(o);\r\n        let b: {[key: string]: any} = new Object();\r\n        for(let i=0; i<a.length; i++) {\r\n            let k = a[i];\r\n            let v = o[k];\r\n            let f = k.replace(n, r);\r\n            b[f] = v;\r\n        }\r\n        return b;\r\n    }\r\n    \r\n    right(s: string, n: number): string { return s.slice(-n); }\r\n\r\n    safeDecrypt(m: string, s: string): string {\r\n        let t = '';\r\n        const algorithm = 'aes-128-cbc';      \r\n        const decoded = Buffer.from(m, 'base64');\r\n        const iv = decoded.subarray(0, 16);\r\n        const hmac = decoded.subarray(16, 48);\r\n        const encryptedData = decoded.subarray(48);      \r\n        const decipher = crypto.createDecipheriv(algorithm, s, iv);    \r\n        let decrypted = decipher.update(encryptedData, undefined, 'utf-8');\r\n        decrypted += decipher.final('utf-8');\r\n        const computedHmac = crypto.createHmac('sha256', s).update(encryptedData).digest();\r\n        if (crypto.timingSafeEqual(hmac, computedHmac)) { t = decrypted; }\r\n        return t;\r\n    }\r\n  \r\n    safeEncrypt(plainText: string, secret: string): string {\r\n        const algorithm = 'aes-128-cbc';\r\n        const iv = crypto.randomBytes(16);\r\n        const cipher = crypto.createCipheriv(algorithm, secret, iv);\r\n        let encrypted = cipher.update(plainText, 'utf8', 'base64');\r\n        encrypted += cipher.final('base64');\r\n        const hmac = crypto.createHmac('sha256', secret).update(Buffer.from(encrypted, 'base64')).digest();\r\n        const result = Buffer.concat([iv, hmac, Buffer.from(encrypted, 'base64')]);\r\n        return result.toString('base64');\r\n    }\r\n\r\n    second(d: string = \"now\"): number { return this.parseDate(d).getSeconds(); }\r\n\r\n    setDefaultProperty(k: string, v: unknown): void { if (!this.hasProperty(k) || this[k] === null) { this[k] = v; } }\r\n\r\n    setObjectPropertyValue(o: {[key: string]: any}, k: string, v: any): {[key: string]: any} { if(o.hasProperty(k)) { o[k] = v; } return o; }\r\n\r\n    setPropertyValue(k: string, v: any): void { this[k] = v; }\r\n\r\n    singular(v: string): string {\r\n        if (v.slice(-3) === 'ies') { v = v.slice(0, v.length - 3) + 'y'; } \r\n        else if (v.slice(-4) === 'sses') { v = v.slice(0, v.length - 2); } \r\n        else if (v.slice(-1) === 's') { v = v.slice(0, v.length - 1); }\r\n        return v;\r\n    }\r\n\r\n    strReplace(search: string | string[], replace: string | string[], subject: string): string {\r\n        if(Array.isArray(search)) {\r\n          if(!Array.isArray(replace)) { replace = Array(search.length).fill(replace); }\r\n          search.forEach((s, index) => {\r\n            const replacement = replace[index] ?? \"\";\r\n            subject = subject.split(s).join(replacement);\r\n          });\t\r\n          return subject;\r\n        }\r\n        return subject.split(search).join(replace as string);\r\n    }\r\n\r\n    thirtyDaysAgo(): string {\r\n        const now = new Date();\r\n        now.setDate(now.getDate() - 30);\r\n        const year = now.getFullYear();\r\n        const month = String(now.getMonth() + 1).padStart(2, '0');\r\n        const day = String(now.getDate()).padStart(2, '0');\r\n        const hours = String(now.getHours()).padStart(2, '0');\r\n        const minutes = String(now.getMinutes()).padStart(2, '0');\r\n        const seconds = String(now.getSeconds()).padStart(2, '0');    \r\n        return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n    }\r\n  \r\n    thirtyDaysFromNow(): string {\r\n        const now = new Date();\r\n        now.setDate(now.getDate() + 30);\r\n        const year = now.getFullYear();\r\n        const month = String(now.getMonth() + 1).padStart(2, '0');\r\n        const day = String(now.getDate()).padStart(2, '0');\r\n        const hours = String(now.getHours()).padStart(2, '0');\r\n        const minutes = String(now.getMinutes()).padStart(2, '0');\r\n        const seconds = String(now.getSeconds()).padStart(2, '0');\r\n        return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n    }\r\n    \r\n    time(): number { return Math.floor(Date.now() / 1000); }\r\n    \r\n    titleCase(t: string): string { return t.toLowerCase().split(\" \").map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \"); }\r\n  \r\n    trim(str: string, chars: string = \" \\t\\n\\r\\v\\0\"): string { const pattern = new RegExp(`^[${chars}]+|[${chars}]+$`, \"g\"); return str.replace(pattern, \"\"); }\r\n\r\n    ucase(t: string): string { return t.toUpperCase(); }\r\n\r\n    unset(key: string): void { if(key in this.data) { delete this.data[key]; } }\r\n\r\n    week(date: string = 'now'): string {\r\n        const inputDate = date === 'now' ? new Date() : new Date(date);\r\n        const oneJan = new Date(inputDate.getFullYear(), 0, 1);\r\n        const dayOfYear = ((inputDate.getTime() - oneJan.getTime()) / 86400000) + 1;\r\n        return String(Math.ceil(dayOfYear / 7));\r\n    }\r\n\r\n    year(d: string = \"now\"): number { return this.parseDate(d).getFullYear(); }\r\n\r\n    yesNoFormat(b: boolean | number): string { return (b === true || b === 1) ? 'Yes' : 'No'; }\r\n\r\n    yesterday(): string {\r\n        const now = new Date();\r\n        now.setDate(now.getDate() - 1);\r\n        const year = now.getFullYear();\r\n        const month = String(now.getMonth() + 1).padStart(2, '0');\r\n        const day = String(now.getDate()).padStart(2, '0');\r\n        const hours = String(now.getHours()).padStart(2, '0');\r\n        const minutes = String(now.getMinutes()).padStart(2, '0');\r\n        const seconds = String(now.getSeconds()).padStart(2, '0');\r\n        return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n    }\r\n\r\n    zeroPad(t: string, l: number): string { return t.padStart(l, \"0\"); }\r\n\r\n    zeroUnpad(t: string): string {\r\n        let length = t.length;\r\n        for (let i = 1; i < length; i++) {\r\n            const p = length - i;\r\n            const s = t.charAt(p);\t  \r\n            if (s === '0') { t = t.substring(0, p); } \r\n            else if (s === '.') { t = t.substring(0, p); break; } \r\n            else { break; }\r\n        }\r\n        return t;\r\n    }\r\n}","import Malt from \"../malt\";\r\nimport { AccountMaltInterface } from \"../../interfaces/malts/account\";\r\n\r\nexport default class AccountMalt extends Malt implements AccountMaltInterface {\r\n\r\n    id: string = '';\r\n    class: string = 'individual';\r\n    status: string = 'new';\r\n    type: string = 'standard';\r\n    login: string = '';\r\n    code: string = '';\r\n    full: string = '';\r\n    email: string = '';\r\n    phone: string = '';\r\n    zip: string = '';\r\n    photo: string = '';\r\n    hash: string = '';\r\n    password: string = '';\r\n    crypt: string = '';\r\n    secret: string = '';\r\n    lat: number = 0;\r\n    lon: number = 0;\r\n    nonce: number = 1;\r\n    dob: string = '';\r\n    createdon: string = '';\r\n    updatedon: string = '';\r\n\r\n    activities: {[key: string]: any}[] = [];\r\n    balances: {[key: string]: any}[] = [];\r\n    contacts: {[key: string]: any}[] = [];\r\n    fields: {[key: string]: any}[] = [];\r\n    invitations: {[key: string]: any}[] = [];\r\n    issuers: {[key: string]: any}[] = [];\r\n    options: {[key: string]: any}[] = [];\r\n    perms: {[key: string]: any}[] = [];\r\n    rewards: {[key: string]: any}[] = [];\r\n    types: {[key: string]: any}[] = [];\r\n    values: {[key: string]: any}[] = [];\r\n\r\n    constructor() { super({}); }\r\n\r\n    getAccountActivity(activity_id: string): { [key: string]: any } { return this.getAccountActivityByKey('activity_id', activity_id); }\r\n\r\n    getAccountActivityByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.activities, k, v); }\r\n\r\n    getAccountBalance(balance_id: string): { [key: string]: any } { return this.getAccountBalanceByKey('balance_id', balance_id); }\r\n\r\n    getAccountBalanceByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.balances, k, v); }\r\n\r\n    getAccountContact(contact_id: string): { [key: string]: any } { return this.getAccountContactByKey('contact_id', contact_id); }\r\n\r\n    getAccountContactByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.contacts, k, v); }\r\n\r\n    getAccountField(field_id: string): { [key: string]: any } { return this.getAccountFieldByKey('field_id', field_id); }\r\n\r\n    getAccountFieldByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.fields, k, v); }\r\n\r\n    getAccountInvitation(invite_id: string): { [key: string]: any } { return this.getAccountInvitationByKey('invite_id', invite_id); }\r\n\r\n    getAccountInvitationByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.invitations, k, v); }\r\n\r\n    getAccountIssuer(issuer_id: string): { [key: string]: any } { return this.getAccountIssuerByKey('issuer_id', issuer_id); }\r\n\r\n    getAccountIssuerByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.issuers, k, v); }\r\n\r\n    getAccountOption(option_id: string): { [key: string]: any } { return this.getAccountOptionByKey('option_id', option_id); }\r\n\r\n    getAccountOptionByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.options, k, v); }\r\n\r\n    getAccountPerm(perm_id: string): { [key: string]: any } { return this.getAccountPermByKey('perm_id', perm_id); }\r\n\r\n    getAccountPermByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.perms, k, v); }\r\n\r\n    getAccountReward(reward_id: string): { [key: string]: any } { return this.getAccountRewardByKey('reward_id', reward_id); }\r\n\r\n    getAccountRewardByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.rewards, k, v); }\r\n\r\n    getAccountType(type_id: string): { [key: string]: any } { return this.getAccountTypeByKey('type_id', type_id); }\r\n\r\n    getAccountTypeByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.types, k, v); }\r\n\r\n    getAccountValue(value_id: string): { [key: string]: any } { return this.getAccountValueByKey('value_id', value_id); }\r\n\r\n    getAccountValueByKey(k: string, v: string): { [key: string]: any } { return this.getObjectByKey(this.values, k, v); }\r\n\r\n    is2fa(): boolean {\r\n        let p = false;\r\n        let f = this.getAccountFieldByKey('field_key', '2fa');\r\n        if(this.isSet(f, 'field_id')) {\r\n            let o = this.getAccountValueByKey('value_field', f.field_id);\r\n            if(this.isSet(o, 'value_id')) {\r\n                let p = Boolean(o['value_free']);\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    isPremium(): boolean {\r\n        let p = false;\r\n        let f = this.getAccountFieldByKey('field_key', 'premium');\r\n        if(this.isSet(f, 'field_id')) {\r\n            let o = this.getAccountValueByKey('value_field', f.field_id);\r\n            if(this.isSet(o, 'value_id')) {\r\n                let p = Boolean(o['value_free']);\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n\r\n    mergeUser(user: any): void {\r\n        if(this.isObject(user)) {\r\n            if(this.isSet(user, 'id')) { this.id = user['id']; }\r\n            if(this.isSet(user, 'email')) { this.email = user['email']; }\r\n            if(this.isSet(user, 'name')) { this.full = user['name']; }\r\n        }\r\n    }\r\n}","import Malt from '../malt';\r\nimport { AgentMaltInterface } from '../../interfaces/malts/agent';\r\n\r\nexport default class AgentMalt extends Malt implements AgentMaltInterface {\r\n\r\n    intervals: {[key: string]: number};\r\n\r\n    constructor(intervals: {[key: string]: number}) {\r\n        super({});\r\n        this.intervals = intervals;\r\n    }\r\n\r\n}\r\n\r\n","import Malt from \"../malt\";\r\n\r\nexport default class AnalyticMalt extends Malt {\r\n\r\n    analytic_timestamp: string     = '';\r\n    analytic_trades: number        = 0;\r\n    analytic_basevol: number       = 0;\r\n    analytic_countervol: number    = 0;\r\n    analytic_avg: number           = 0;\r\n    analytic_high: number          = 0;\r\n    analytic_low: number           = 0;\r\n    analytic_open: number          = 0;\r\n    analytic_close: number         = 0;\r\n\r\n    constructor() { super({}); }\r\n\r\n    get_buying_average_price() { return this.formatLumens(1/this.analytic_avg); }\r\n  \r\n    get_buying_high_price() { return this.formatLumens(1/this.analytic_high); }\r\n  \r\n    get_buying_low_price() { return this.formatLumens(1/this.analytic_low); }\r\n  \r\n    get_buying_open_price() { return this.formatLumens(1/this.analytic_open); }\r\n  \r\n    get_buying_close_price() { return this.formatLumens(1/this.analytic_close); }\r\n\r\n    get_selling_average_price() { return this.formatLumens(this.analytic_avg); }\r\n\r\n    get_selling_high_price() { return this.formatLumens(this.analytic_high); }\r\n  \r\n    get_selling_low_price() { return this.formatLumens(this.analytic_low); }\r\n  \r\n    get_selling_open_price() { return this.formatLumens(this.analytic_open); }\r\n  \r\n    get_selling_close_price() { return this.formatLumens(this.analytic_close); }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class AnalyticsMalt extends Malt {\r\n\r\n    periodType: string\t\t\t\t\t= 'day';\r\n    periodStart: number\t\t\t\t\t= ((this.time() * 1000) - 86400000);\r\n    periodEnd: number \t\t\t\t\t= (this.time() * 1000);\r\n    periodResolution: number\t\t\t= 3600000;\r\n    periodOffset: number\t\t\t\t= 0;\r\n    periodOrder: string\t\t\t\t\t= 'asc';\r\n    periodLimit: number\t\t\t\t\t= 12;\r\n    records: {}[]\t\t\t\t\t\t= [];\r\n    totalRecords: number\t\t\t\t= 0;\r\n\r\n    constructor() { super({}); }\r\n\r\n    addRecord(r: {}): number { this.records.push(r); return this.countRecords(); }\r\n\r\n\tcountRecords(): number { this.totalRecords = this.records.length; return this.totalRecords; }\r\n\r\n\tlistRecords(): {}[] { return this.records; }\r\n\r\n\tmenuPeriods(): string[] { return ['hour','day','week','month','quarter','year']; }\r\n\r\n\tsetPeriod(p: string): void {\r\n\t\tif(p == 'hour') { this.setPeriodHour(); }\r\n\t\telse if(p == 'day') { this.setPeriodDay(); }\r\n\t\telse if(p == 'week') { this.setPeriodWeek(); }\r\n\t\telse if(p == 'month') { this.setPeriodMonth(); }\r\n\t\telse if(p == 'quarter') { this.setPeriodQuarter(); }\r\n\t\telse if(p == 'year') { this.setPeriodYear(); }\r\n\t}\r\n\r\n\tsetPeriodHour() {\r\n\t\tthis.period_type\t\t\t\t= 'hour';\r\n\t\tthis.period_start\t\t\t\t= (this.time() * 1000) - 3600000;\r\n\t\tthis.period_end\t\t\t\t\t= (this.time() * 1000);\r\n\t\tthis.period_resolution\t        = 300000;\r\n\t\tthis.period_limit\t\t\t\t= 12;\r\n\t}\r\n\r\n\tsetPeriodDay() {\r\n\t\tthis.period_type\t\t\t\t= 'day';\r\n\t\tthis.period_start\t\t\t\t= (this.time() * 1000) - 86400000;\r\n\t\tthis.period_end\t\t\t\t\t= (this.time() * 1000);\r\n\t\tthis.period_resolution\t        = 3600000;\r\n\t\tthis.period_limit\t\t\t\t= 24;\r\n\t}\r\n\r\n\tsetPeriodWeek() {\r\n\t\tthis.period_type\t\t\t\t= 'week';\r\n\t\tthis.period_start\t\t\t\t= (this.time() * 1000) - 604800000;\r\n\t\tthis.period_end\t\t\t\t\t= (this.time() * 1000);\r\n\t\tthis.period_resolution\t        = 86400000;\r\n\t\tthis.period_limit\t\t\t\t=\t7;\r\n\t}\r\n\r\n\tsetPeriodMonth() {\r\n\t\tthis.period_type\t\t\t\t= 'month';\r\n\t\tthis.period_start\t\t\t\t= (this.time() * 1000) - 2620800000;\r\n\t\tthis.period_end\t\t\t\t\t= (this.time() * 1000);\r\n\t\tthis.period_resolution\t        = 109200000;\r\n\t}\r\n\r\n\tsetPeriodQuarter() {\r\n\t\tthis.period_type\t\t\t\t= 'quarter';\r\n\t\tthis.period_start\t\t\t\t= (this.time() * 1000) - 7862400000;\r\n\t\tthis.period_end\t\t\t\t\t= (this.time() * 1000);\r\n\t\tthis.period_resolution\t        = 327600000;\r\n\t}\r\n\r\n\tsetPeriodYear() {\r\n\t\tthis.period_type\t\t\t\t= 'year';\r\n\t\tthis.period_start\t\t\t\t= (this.time() * 1000) - 31449600000;\r\n\t\tthis.period_end\t\t\t\t\t= (this.time() * 1000);\r\n\t\tthis.period_resolution\t        = 2620800000;\r\n\t\tthis.period_limit\t\t\t\t= 12;\r\n\t}\r\n\r\n\tsetRecords(rs: {}[]) { this.records = rs; return this.countRecords(); }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class BidMalt extends Malt {\r\n\r\n    bid_id: string\t\t\t\t = '';\r\n    bid_account: string          = '';\r\n    bid_selling: string          = '';\r\n    bid_buying: string           = '';\r\n    bid_amount: number           = 0;\r\n    bid_price: number            = 0;\r\n    bid_updatedon: string        = this.getDateNow();\r\n\r\n    coin_id: string               = '';\r\n    coin_name: string             = '';\r\n    coin_code: string             = '';\r\n    coin_issuer: string           = '';\r\n    coin_alpha: string            = '';\r\n    coin_domain: string           = '';\r\n    coin_image: string            = '/images/coins/none.png';\r\n    coin_price: number\t\t\t  = 0;\r\n\r\n    counter_id: string            = '';\r\n    counter_name: string          = '';\r\n    counter_code: string          = '';\r\n    counter_issuer: string        = '';\r\n    counter_alpha: string         = '';\r\n    counter_domain: string        = '';\r\n    counter_image: string         = '/images/coins/none.png';\r\n    counter_price: number\t\t  = 0;\r\n    \r\n    constructor() { super({}); }\r\n\r\n    setCoin(t: {[key: string]: any}): void { this.mergeProperties(t); }\r\n\r\n\tsetCounter(t: {[key: string]: any}): void { let o = this.replaceKeys(t, 'coin_', 'counter_'); this.mergeProperties(o); }\r\n}","import Malt from '../malt';\r\nimport { BlockMaltInterface } from '../../interfaces/malts/block';\r\n\r\nexport default class BlockMalt extends Malt implements BlockMaltInterface {\r\n\r\n    name: string;\r\n    title: string;\r\n\r\n    constructor(name: string, title: string) {\r\n        super({});\r\n        this.name = name;\r\n        this.title = title;\r\n    } \r\n\r\n}\r\n\r\n","import Malt from \"../malt\";\r\n\r\nexport default class BookMalt extends Malt {\r\n\r\n    totalAsks: number\t\t\t\t\t\t= 0;\r\n    totalBids: number\t\t\t\t\t\t= 0;\r\n    asks: {[key: string]: any}[]  \t\t\t= [];\r\n    bids: {[key: string]: any}[]\t\t\t= [];\r\n    base: {[key: string]: any}\t    \t\t= {};\r\n    counter: {[key: string]: any}\t\t\t= {};\r\n\r\n    constructor() { super({}); }\r\n\r\n    addAsk(a: {[key: string]: any}): number { this.asks.push(a); return this.countAsks(); }\r\n\r\n\taddBid(a: {[key: string]: any}): number { this.bids.push(a); return this.countBids(); }\r\n\r\n\tcountAsks(): number { this.totalAsks = this.asks.length; return this.totalAsks; }\r\n\r\n\tcountBids(): number { this.totalBids = this.bids.length; return this.totalBids; }\r\n\r\n\tgetHighestBuyPrice(): number {\r\n\t\tlet i = 0;\r\n\t\tlet a = this.listSellOffers();\r\n\t\tif(a.length > 0) {\r\n\t\t\tlet o = a[0];\r\n\t\t\tif(o.price > 0) { i = this.formatLumens(1/o.price); }\r\n\t\t}\r\n\t\treturn i;\r\n\t}\r\n\r\n\tgetLowestSellPrice(): number {\r\n\t\tlet i = 0;\r\n\t\tlet a = this.listBuyOffers();\r\n\t\tif(a.length > 0) {\r\n\t\t\tlet o = a[0];\r\n\t\t\tif(o.price > 0) { i = this.formatLumens(1/o.price); }\r\n\t\t}\r\n\t\treturn i;\r\n\t}\r\n\r\n\tgetSpreadAmount(): number {\r\n\t\tlet i = 0;\r\n\t\tlet b = this.getHighestBuyPrice();\r\n\t\tlet s = this.getLowestSellPrice();\r\n\t\ti = this.formatLumens(s - b);\r\n\t\treturn i;\r\n\t}\r\n\r\n\tgetSpreadPercent(): number {\r\n\t\tlet i = 0;\r\n\t\tlet b = this.getHighestBuyPrice();\r\n\t\tlet d = this.getSpreadAmount();\r\n\t\tif(d > 0 && b > 0) { i = this.formatDecimal((d / b) * 100); }\r\n\t\treturn i;\r\n\t}\r\n\r\n\tlistBuyOffers(): {[key: string]: any}[] {\r\n\t\tlet i = 0;\r\n\t\tlet a: {[key: string]: any}[] = [];\r\n\t\tfor(let n=0; n<this.bids.length; n++) {\r\n            let o = this.bids[n];\r\n\t\t\tif(this.isNumeric(o.price) && o.price > 0) {\r\n\t\t\t\tlet p = 1/o.price;\r\n\t\t\t\tif(p < i) { i = p; a.unshift(o); }\r\n\t\t\t\telse if(p >= 0.0000001) { a.push(o); }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n\r\n\tlistSellOffers(): {[key: string]: any}[] {\r\n\t\tlet i = 0;\r\n\t\tlet a: {[key: string]: any}[] = [];\r\n\t\tfor(let n=0; n<this.asks.length; n++) {\r\n            let o = this.asks[n];\r\n            if(this.isNumeric(o.price) && o.price > 0) {\r\n\t\t\t\tif(o.price > i) { i = o.price; a.push(o); }\r\n\t\t\t\telse { a.unshift(o); }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n\r\n\tsetAsks(a: {[key: string]: any}[]): number { this.asks = a; return this.countAsks(); }\r\n\r\n\tsetBids(a: {[key: string]: any}[]): number { this.bids = a; return this.countBids(); }\r\n\r\n\tcompareAsks(a: {[key: string]: any}, b: {[key: string]:any}): number { return a.price - b.price; }\r\n\r\n\tcompareBids(a: {[key: string]: any}, b: {[key: string]:any}): number { return b.price - a.price; }\r\n\r\n\tsortAsks(): void {\r\n\t\tlet a: {[key: string]: any}[] = [];\r\n\t\tfor(let i=0; i<this.asks.length; i++) {\r\n            let b = this.asks[i];\r\n\t\t\tif(this.isNumeric(b.price) && b.price > 0.0000001) { a.push(b); }\r\n\t\t}\r\n\t\tthis.setAsks(a);\r\n\t\tthis.asks.sort(this.compareAsks.bind(this));\r\n\t}\r\n\r\n\tsortBids(): void {\r\n\t\tlet a: {[key: string]: any}[] = [];\r\n\t\tfor(let i=0; i<this.bids.length; i++) {\r\n            let b = this.bids[i];\r\n\t\t\tif(this.isNumeric(b.price) && b.price > 0.0000001) { a.push(b); }\r\n\t\t}\r\n\t\tthis.setBids(a);\r\n\t\tthis.bids.sort(this.compareBids.bind(this));\r\n\t}\r\n\r\n}","import Malt from \"../malt\";\r\nimport AnalyticsMalt from './analytics';\r\n\r\nexport default class ChartMalt extends Malt {\r\n\r\n    script: string              = '';\r\n    canvas: string              = '';\r\n    context: string             = '2d';\r\n    type: string                = 'line';\r\n    period: string  \t\t    = 'day';\r\n    label: string   \t\t    = this.day() + ' ' + this.monthAsString() + ' ' + this.year();\r\n    data: {[key: string]: any}  = {volume: 0, open: 0, close: 0, labels: '', datasets: [], records: []};\r\n\r\n    constructor() { super({}); }\r\n\r\n    menuDay(): string[] { \r\n        let b: string[] = [];\r\n        let h = 0;\r\n        let t = '';\r\n        for(let i=0;i<24;i++) { \r\n            if(i > 12) { t = 'PM'; h = i-12; } \r\n            else { h = i; t = 'AM'; } \r\n            b.push(h.toString() + ' ' + t); \r\n        } \r\n        return b; \r\n    }\r\n    \r\n    menuHour(): string[] { \r\n        let b: string[] = []; \r\n        for(let j=0;j<24;j++) { \r\n            let v = this.zeroPad(j.toString(),2); \r\n            b.push(v); \r\n        } \r\n        return b; \r\n    }\r\n    \r\n    menuMonth() { return []; }\r\n    \r\n    menuQuarter() { return []; }\r\n    \r\n    menuWeek() { return ['SUN','MON','TUE','WED','THU','FRI','SAT']; }\r\n    \r\n    menuYear() { return ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']; }\r\n    \r\n    setAnalytics(a: typeof AnalyticsMalt) { this.analytics = a; }\r\n    \r\n    setCanvas(id: string): void { this.canvas = id; }\r\n    \r\n    setContext(d: string): void { this.context = d; }\r\n    \r\n    setScript(s: string): void { this.script = s; }\r\n    \r\n    setType(t: string): void { this.type = t; }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class ClaimableMalt extends Malt {\r\n\r\n    claim_id: string                = '';\r\n    claim_account: string\t        = '';\r\n    claim_coin: string\t\t        = '';\r\n    claim_amount: number\t        = 0;\r\n    claim_xlm: number\t\t        = 0;\r\n    claim_usd: number\t\t        = 0;\r\n    claim_expires: boolean\t        = false;\r\n    claim_expireson: string         = '';\r\n    claim_unlocks: boolean\t        = false;\r\n    claim_unlockson: string\t\t\t= '';\r\n    claim_sponsor: string\t\t\t= '';\r\n\r\n    coin_id: string               \t= '';\r\n    coin_class: string\t\t\t\t= '';\r\n    coin_code: string             \t= '';\r\n    coin_issuer: string           \t= '';\r\n    coin_name: string             \t= '';\r\n    coin_alpha: string\t\t\t\t= '';\r\n    coin_domain: string\t\t\t\t= '';\r\n    coin_descr: string            \t= '';\r\n    coin_conditions: string       \t= '';\r\n    coin_redemption: string       \t= '';\r\n    coin_image: string            \t= '';\r\n    coin_supply: string           \t= '';\r\n    coin_price: number\t\t\t\t= 0;\r\n    coin_xlm: number\t\t\t\t= 0;\r\n    coin_usd: number\t\t\t\t= 0;\r\n    \r\n    constructor() { super({}); }\r\n\r\n}","import Malt from '../malt';\r\n\r\nclass Coin extends Malt {\r\n\t\r\n\tconstructor(a: Record<string, any> = {}) {\r\n        super(a);\r\n        this.setDefaultProperty('CoinId', '');\r\n\t\tthis.setDefaultProperty('CoinAccount', '');\r\n\t\tthis.setDefaultProperty('CoinClass', '');\r\n\t\tthis.setDefaultProperty('CoinType', '');\r\n\t\tthis.setDefaultProperty('CoinGroup', '');\r\n\t\tthis.setDefaultProperty('CoinReserves', '');\r\n\t\tthis.setDefaultProperty('CoinStatus', '');\r\n\t\tthis.setDefaultProperty('CoinStripe', '');\r\n\t\tthis.setDefaultProperty('CoinQuote', '');\r\n\t\tthis.setDefaultProperty('CoinCode', '');\r\n\t\tthis.setDefaultProperty('CoinIssuer', '');\r\n\t\tthis.setDefaultProperty('CoinAlpha', '');\r\n\t\tthis.setDefaultProperty('CoinName', '');\r\n\t\tthis.setDefaultProperty('CoinDomain', '');\r\n\t\tthis.setDefaultProperty('CoinDescr', '');\r\n\t\tthis.setDefaultProperty('CoinConditions', '');\r\n\t\tthis.setDefaultProperty('CoinRedemption', '');\r\n\t\tthis.setDefaultProperty('CoinAttestation', '');\r\n        this.setDefaultProperty('CoinHtml', '');\r\n\t\tthis.setDefaultProperty('CoinImage', 'images/coins/NONE.png');\r\n        this.setDefaultProperty('CoinThumb', 'images/coins/NONE.png');\r\n\t\tthis.setDefaultProperty('CoinSupply', 0);\r\n\t\tthis.setDefaultProperty('CoinMin', 0);\r\n\t\tthis.setDefaultProperty('CoinMax', 0);\r\n\t\tthis.setDefaultProperty('CoinLiquidity', 0);\r\n        this.setDefaultProperty('CoinFee', 0);\r\n\t\tthis.setDefaultProperty('CoinPrice', 0);\r\n\t\tthis.setDefaultProperty('CoinSpread', 0.05);\r\n\t\tthis.setDefaultProperty('CoinYield', 0);\r\n\t\tthis.setDefaultProperty('CoinFeatured', 0);\r\n\t\tthis.setDefaultProperty('CoinAuth', 0);\r\n\t\tthis.setDefaultProperty('CoinFetchedon', 0);\r\n\t\tthis.setDefaultProperty('CoinXlm', 0);\r\n\t\tthis.setDefaultProperty('CoinUsd', 0);\r\n\t\tthis.setDefaultProperty('CoinXau', 0);\r\n\t\tthis.setDefaultProperty('CoinXag', 0);\r\n\t\tthis.setDefaultProperty('CoinBtc', 0);\r\n\t\tthis.setDefaultProperty('CoinSol', 0);\r\n\t\tthis.setDefaultProperty('CoinEth', 0);\r\n\t\tthis.setDefaultProperty('CoinEur', 0);\r\n\t\tthis.setDefaultProperty('CoinAmount', 0);\r\n\t\tthis.setDefaultProperty('CoinReserved', 0);\r\n\t\tthis.setDefaultProperty('CoinAvailable', 0);\r\n\t\tthis.setDefaultProperty('CoinSelling', 0);\r\n\t\tthis.setDefaultProperty('CoinBuying', 0);\r\n\t\tthis.setDefaultProperty('CoinPooled', 0);\r\n\t\tthis.setDefaultProperty('CoinBalance', 0);\r\n\t\tthis.setDefaultProperty('TotalHolders', 0);\r\n\t\tthis.setDefaultProperty('TotalMarkets', 0);\r\n\t\tthis.setDefaultProperty('TotalOperations', 0);\r\n\t\tthis.setDefaultProperty('TotalPayments', 0);\r\n\t\tthis.setDefaultProperty('TotalPools', 0);\r\n\t\tthis.setDefaultProperty('TotalRatings', 0);\r\n\t\tthis.setDefaultProperty('TotalTrades', 0);\r\n\t\tthis.setDefaultProperty('Holders', []);\r\n\t\tthis.setDefaultProperty('Markets', []);\r\n\t\tthis.setDefaultProperty('Pools', []);\r\n\t\tthis.setDefaultProperty('Ratings', []);\r\n\t\tthis.setDefaultProperty('Trades', []);\r\n    }\r\n\r\n    countHolders(): number { this.TotalHolders = this.Holders.length; return this.TotalHolders; }\r\n\r\n    countMarkets(): number { this.TotalMarkets = this.Markets.length; return this.TotalMarkets; }\r\n\r\n    countPools(): number { this.TotalPools = this.Pools.length; return this.TotalPools; }\r\n\r\n    countRatings(): number { this.TotalRatings = this.Ratings.length; return this.TotalRatings; }\r\n\r\n    countTrades(): number { this.TotalTrades = this.Trades.length; return this.TotalTrades; }\r\n}\r\nexport default Coin;","import Malt from '../malt';\r\nimport { FaultMaltInterface } from '../../interfaces/malts/fault';\r\n\r\nexport default class FaultMalt extends Malt implements FaultMaltInterface {\r\n\r\n    file: string;\r\n    func: string;\r\n    message: string;\r\n    date: string;\r\n\r\n    constructor(message: string, file: string, func: string) {\r\n        super({});\r\n        this.message = message;\r\n        this.file = file;\r\n        this.func = func;\r\n        this.date = this.getDateNow();\r\n    }\r\n\r\n}","import Malt from \"../malt\";\r\nimport FaultMalt from \"./fault\";\r\nimport { ErrorsMaltInterface } from \"../../interfaces/malts/errors\";\r\nimport { FaultMaltInterface } from \"../../interfaces/malts/fault\";\r\n\r\nexport default class ErrorsMalt extends Malt implements ErrorsMaltInterface {\r\n\r\n    admin: boolean = false;\r\n    codes: {[key: string]: {[key: string]: string}} = {\r\n        c001: {code: 'c001', type: \"error\", message: \"unable to connect to remote host.\"},\r\n        c002: {code: 'c002', type: \"error\", message: \"unable to connect to webnative server.\"},\r\n        c003: {code: 'c003', type: \"error\", message: \"unable to connect to the mysql database.\"},\r\n        c004: {code: 'c004', type: \"error\", message: \"unable to connect to the gmg cozone api.\"},\r\n        c005: {code: 'c005', type: \"error\", message: \"unable to verify identity of host (ssl handshake failed).\"}\r\n    };\r\n    counter: number = 0;\r\n    dump: boolean = true;\r\n    errors: {}[] = [];\r\n    settings: {[key: string]: string} = {filename: 'rocket.log', directory: 'D:\\\\Inetpub\\\\media\\\\logs', filepath: 'D:\\\\Inetpub\\\\media\\\\logs\\\\rocket.log'};\r\n\r\n    constructor() { super({}); }\r\n\r\n    addError(error: {}) { this.errors.push(error); }\r\n\r\n    clearErrors() { this.errors = []; this.resetCounter(); }\r\n\r\n    createError(code: string, file: string, func: string, msg: string): FaultMaltInterface {\r\n\t\treturn new FaultMalt(msg, file, func);\r\n\t}\r\n\r\n    createLog() { \r\n        let content = 'date,type,file,function,message' + String.fromCharCode(10); \r\n        this.writeFile(this.settings.filepath, content); \r\n    }\r\n\r\n    decrementCounter() { if(this.counter > 0) { this.counter--; } }\r\n\r\n    getCurrentError() { return this.getError(this.counter); }\r\n\r\n    getError(index: number) { let e = {}; if(index <= this.getErrorCount()) { let e = this.errors[index]; } return e; }\r\n    \r\n    getErrorCount() { return this.errors.length; }\r\n\r\n    getErrors() { return this.errors; }\r\n\r\n    getSettings(): {[key: string]: string} { return this.settings; }\r\n\r\n    incrementCounter() { this.counter++; }\r\n\r\n    logException(e: Error, file: string, func: string, type: string='error', dump: boolean=true): void {\r\n        const msg = e.message;\r\n        let c = this.getLog();\r\n        c += this.getDateNow() + ',' + type + ',' + file + ',' + func + ',' + msg.replace(/,/g, '') + String.fromCharCode(10);\r\n        this.writeFile(this.settings.filepath, c);\r\n        if(dump == true) { this.dumpException(msg, file, func, type); }\r\n\t}\r\n\r\n    nextError() { let e = this.getCurrentError(); this.incrementCounter(); return e; }\r\n\r\n    previousError() { this.decrementCounter(); return this.getCurrentError(); }\r\n\r\n    resetCounter() { this.counter = 0; }\r\n\r\n    setSettings(settings: {[key: string]: string}): void { this.settings = settings; }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class ExtensionsMalt extends Malt {\r\n\r\n    _blank: string = \"/images/icons/files/_blank.png\";\r\n    aac: string = \"/images/icons/files/aac.png\";\r\n    ai: string = \"/images/icons/files/ai.png\";\r\n    aiff: string = \"/images/icons/files/aiff.png\";\r\n    css: string = \"/images/icons/files/css.png\";\r\n    csv: string = \"/images/icons/files/csv.png\";\r\n    dat: string = \"/images/icons/files/dat.png\";\r\n    doc: string = \"/images/icons/files/doc.png\";\r\n    docx: string = \"/images/icons/files/doc.png\";\r\n    dotx: string = \"/images/icons/files/dotx.png\";\r\n    dwg: string = \"/images/icons/files/dwg.png\";\r\n    dxf: string = \"/images/icons/files/dxf.png\";\r\n    eps: string = \"/images/icons/files/eps.png\";\r\n    epsf: string = \"/images/icons/files/eps.png\";\r\n    exe: string = \"/images/icons/files/exe.png\";\r\n    gif: string = \"/images/icons/files/gif.png\";\r\n    hpp: string = \"/images/icons/files/hpp.png\";\r\n    html: string = \"/images/icons/files/html.png\";\r\n    htm: string = \"/images/icons/files/html.png\";\r\n    ics: string = \"/images/icons/files/ics.png\";\r\n    iso: string = \"/images/icons/files/iso.png\";\r\n    java: string = \"/images/icons/files/java.png\";\r\n    js: string = \"/images/icons/files/js.png\";\r\n    jpg: string = \"/images/icons/files/jpg.png\";\r\n    key: string = \"/images/icons/files/key.png\";\r\n    less: string = \"/images/icons/files/less.png\";\r\n    mid: string = \"/images/icons/files/mid.png\";\r\n    mp3: string = \"/images/icons/files/mp3.png\";\r\n    odf: string = \"/images/icons/files/odf.png\";\r\n    ods: string = \"/images/icons/files/ods.png\";\r\n    odt: string = \"/images/icons/files/odt.png\";\r\n    ots: string = \"/images/icons/files/ots.png\";\r\n    ott: string = \"/images/icons/files/ott.png\";\r\n    pdf: string = \"/images/icons/files/pdf.png\";\r\n    php: string = \"/images/icons/files/php.png\";\r\n    png: string = \"/images/icons/files/png.png\";\r\n    ppt: string = \"/images/icons/files/ppt.png\";\r\n    py: string = \"/images/icons/files/py.png\";\r\n    qt: string = \"/images/icons/files/qt.png\";\r\n    rar: string = \"/images/icons/files/rar.png\";\r\n    rb: string = \"/images/icons/files/rb.png\";\r\n    rtf: string = \"/images/icons/files/rtf.png\";\r\n    sass: string = \"/images/icons/files/sass.png\";\r\n    scss: string = \"/images/icons/files/scss.png\";\r\n    sql: string = \"/images/icons/files/sql.png\";\r\n    tga: string =  \"/images/icons/files/tga.png\";\r\n    tif: string =  \"/images/icons/files/tiff.png\";\r\n    tiff: string =  \"/images/icons/files/tiff.png\";\r\n    txt: string = \"/images/icons/files/txt.png\";\r\n    xls: string = \"/images/icons/files/xls.png\";\r\n    xlsx: string = \"/images/icons/files/xls.png\";\r\n    xml: string = \"/images/icons/files/xml.png\";\r\n    yml: string = \"/images/icons/files/yml.png\";\r\n    zip: string = \"/images/icons/files/zip.png\";\r\n\r\n    constructor() { super({}); }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class FiltersMalt extends Malt {\r\n\r\n    columnlist: string[]       = [];\r\n    currentrow: number         = 0;\r\n    finalstep: number          = 0;\r\n    firststep: number          = 1;\r\n    laststep: number           = 0;\r\n    maxrows: string | number   = 13;\r\n    nextstep: number           = 0;\r\n    page: number               = 1;\r\n    pages: number              = 1;\r\n    offset: number             = 1;\r\n    recordcount: number        = 0;\r\n    sortcol: string            = '';\r\n    sortdir: string            = 'asc';\r\n    newdir: string             = 'desc';\r\n    keywords: string           = '';\r\n    startrow: number           = 1;\r\n    totalpages: number         = 1;\r\n    totalrows: number          = 0;\r\n    tab: number                = 1;\r\n\r\n    constructor() { super({}); }\r\n\r\n    calculateDefaults() {\r\n      if(this.offset < 1) { this.offset = 1; }\r\n      if(this.sortdir == 'asc') { this.newdir = 'desc'; }\r\n      else { this.newdir = 'asc'; }\r\n\t  }\r\n\r\n    calculatePaging() {\r\n        if(this.recordcount == 0) { this.pages = 1; this.page = 1; this.endrow = 1; this.offset = 1; this.finalstep = 1; this.nextstep = 1; this.laststep = 1; this.startrow = 1; }\r\n        else if(this.maxrows == '*') { this.pages = 1; this.page = 1; this.endrow = this.recordcount; this.offset = 1; this.finalstep = 1; this.nextstep = 1; this.laststep = 1; this.startrow = 1; }\r\n        else {\r\n          this.pages = Math.ceil(this.recordcount/Number(this.maxrows));\r\n          this.page = Math.ceil(this.offset/Number(this.maxrows));\r\n          this.endrow = (this.offset + Number(this.maxrows)) - 1;\r\n          if(this.endrow <= 0) { this.endrow = 1; }\r\n          if(this.recordcount < this.endrow) { this.endrow = this.recordcount; this.finalstep = (this.endrow - Number(this.maxrows)) + 1; this.nextstep = (this.endrow - Number(this.maxrows)) + 1; }\r\n          else { this.finalstep =  this.recordcount - (Number(this.maxrows) - ((this.pages * Number(this.maxrows)) - this.recordcount)); this.nextstep = this.endrow + 1; }\r\n          if(this.recordcount < (this.nextstep + Number(this.maxrows))) { this.nextstep = this.finalstep; }\r\n          if(this.endrow >= this.recordcount && this.page < this.pages) { this.page = this.pages; }\r\n        }\r\n        if(this.laststep <= 0) { this.laststep = 1; }\r\n        if(this.nextstep <= 0) { this.nextstep = 1; }\r\n        this.firststep = 1;\r\n      }\r\n\r\n    getFilterArray(formId: string) { \r\n        let r = this.getReservedColumns(); \r\n        let a = '[\\'#' + formId + '_keywords\\''; \r\n        let b = this.keysArray();\r\n        for(let i=0; i<b.length; i++) {\r\n            let k = b[i]; \r\n            if(this.arrayContains(r, k)) { a += ',\\'#' + formId + '_' + k + '\\''; } \r\n        } \r\n        a += ']'; \r\n        return a; \r\n    }\r\n\r\n    getNewSortDirection(columnName: string): string { let d = 'asc'; if(this.sortcol == columnName && this.sortdir == 'asc') { d = 'desc'; } return d; }\r\n\r\n    getReservedColumns(): string[] { return ['formId','columnlist','currentrow','finalstep','firststep','laststep','maxrows','nextstep','page','pages','offset','recordcount','sortcol','sortdir','newdir','keywords','sql','startrow','totalpages','totalrows']; }\r\n\r\n    setColumnlist(l: string[]) { this.columnlist = l; }\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class JsonMalt extends Malt {\r\n\r\n    statuscode: number              = 200;\r\n    message: string                 = '';\r\n    data: {[key: string]: any}      = {};\r\n\terror: boolean\t\t\t        = false;\r\n\tcode: string\t\t\t        = '';\r\n\r\n    constructor() { super({}); }\r\n    \r\n}","import Malt from '../malt';\r\nimport { KeysMaltInterface } from '../../interfaces/malts/keys';\r\n\r\nexport default class KeysMalt extends Malt implements KeysMaltInterface {\r\n\r\n    shared: string; \r\n    secret: string; \r\n    crypt: string ;\r\n\r\n    constructor(shared: string, crypt: string) {\r\n        super({});\r\n        this.shared = shared;\r\n        this.crypt = crypt;        \r\n        const k = this.getEnvironmentVariable(this.shared);\r\n        this.secret = this.decryptKey(this.crypt, k);\r\n    }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class LayoutMalt extends Malt {\r\n\r\n    body             = {top: {left: '', center: '', right: ''}, middle: {left: '', center: '', right: ''}, bottom: {left: '', center: '', right: ''}};\r\n    header           = {left: '', center: '', right: ''};\r\n    footer           = {left: '', center: '', right: ''};\r\n\r\n    constructor() { super({}); }\r\n\r\n}","import Malt from '../malt';\r\nimport { MailerMaltInterface } from '../../interfaces/malts/mailer';\r\n\r\nexport default class MailerMalt extends Malt implements MailerMaltInterface {\r\n\r\n    username: string; \r\n    hash: string;\r\n    password: string; \r\n    port: number; \r\n    from: string;\r\n    sender: string; \r\n    host: string; \r\n    timeout: number;\r\n\r\n    constructor(secret: string, username: string, hash: string, port: number, from: string, sender: string, host: string, timeout: number = 30) {\r\n        super({});\r\n        this.username = username;\r\n        this.hash = hash;\r\n        this.port = port;\r\n        this.from = from;\r\n        this.sender = sender;\r\n        this.host = host;\r\n        this.timeout = timeout;\r\n        this.password = this.decryptKey(this.hash, secret);\r\n    }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class MessageMalt extends Malt {\r\n\r\n    constructor() { super({}); }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class MimesMalt extends Malt {\r\n\r\n    \"3gp\": string = \"video/3gpp\";\r\n    \"7z\": string = \"application/x-7z-compressed\";\r\n    aac: string = \"audio/x-aac\";\r\n    ac: string = \"application/pkix-attr-cert\";\r\n    asp: string = \"text/plain\";\r\n    ai: string = \"application/postscript\";\r\n    aif: string = \"audio/x-aiff\";\r\n    aifc: string = \"audio/x-aiff\";\r\n    aiff: string = \"audio/x-aiff\";\r\n    air: string = \"application/vnd.adobe.air-application-installer-package+zip\";\r\n    ait: string = \"application/vnd.dvb.ait\";\r\n    apk: string = \"application/vnd.android.package-archive\";\r\n    asf: string = \"video/x-ms-asf\";\r\n    asc: string = \"text/plain\";\r\n    atom: string = \"application/atom+xml\";\r\n    au: string = \"audio/basic\";\r\n    avi: string = \"video/x-msvideo\";\r\n    azw: string = \"application/vnd.amazon.ebook\";\r\n    bcpio: string = \"application/x-bcpio\";\r\n    bin: string = \"application/octet-stream\";\r\n    bmi: string = \"application/vnd.bmi\";\r\n    bmp: string = \"image/bmp\";\r\n    c: string = \"text/plain\";\r\n    cab: string = \"application/vnd.ms-cab-compressed\";\r\n    cc: string = \"text/plain\";\r\n    ccad: string = \"application/clariscad\";\r\n    cdf: string = \"application/x-netcdf\";\r\n    cfm: string = \"text/plain\";\r\n    cgm: string = \"image/cgm\";\r\n    chm: string = \"application/vnd.ms-htmlhelp\";\r\n    class: string = \"application/java-vm\";\r\n    cmx: string = \"image/x-cmx\";\r\n    cpio: string = \"application/x-cpio\";\r\n    cpt: string = \"application/mac-compactpro\";\r\n    crd: string = \"application/x-mscardfile\";\r\n    csh: string = \"application/x-csh\";\r\n    css: string = \"text/css\";\r\n    csv: string = \"text/csv\";\r\n    dat: string = \"application/octet-stream\";\r\n    dcr: string = \"application/x-director\";\r\n    der: string = \"application/x-x509-ca-cert\";\r\n    dir: string = \"application/x-director\";\r\n    dms: string = \"application/octet-stream\";\r\n    doc: string = \"application/msword\";\r\n    docm: string = \"application/vnd.ms-word.document.macroenabled.12\";\r\n    docx: string = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\r\n    dotm: string = \"application/vnd.ms-word.template.macroenabled.12\";\r\n    drw: string = \"application/drafting\";\r\n    dtd: string = \"application/xml-dtd\";\r\n    dvi: string = \"application/x-dvi\";\r\n    dwf: string = \"model/vnd.dwf\";\r\n    dwg: string = \"image/vnd.dwg\";\r\n    dxf: string = \"application/dxf\";\r\n    dxr: string = \"application/x-director\";\r\n    eps: string = \"application/postscript\";\r\n    epub: string = \"application/epub+zip\";\r\n    eml: string = \"message/rfc822\";\r\n    eot: string = \"application/vnd.ms-fontobject\";\r\n    etx: string = \"text/x-setext\";\r\n    exe: string = \"application/octet-stream\";\r\n    ez: string = \"application/andrew-inset\";\r\n    f: string = \"text/plain\";\r\n    f4v: string = \"video/x-f4v\";\r\n    f90: string = \"text/plain\";\r\n    fh: string = \"image/x-freehand\";\r\n    fli: string = \"video/x-fli\";\r\n    flv: string = \"video/x-flv\";\r\n    fpx: string = \"image/vnd.fpx\";\r\n    fxp: string = \"application/vnd.adobe.fxp\";\r\n    g3: string = \"image/g3fax\";\r\n    gif: string = \"image/gif\";\r\n    gtar: string = \"application/x-gtar\";\r\n    gv: string = \"text/vnd.graphviz\";\r\n    gz: string = \"application/x-gzip\";\r\n    h: string = \"text/plain\";\r\n    hdf: string = \"application/x-hdf\";\r\n    hh: string = \"text/plain\";\r\n    hqx: string = \"application/mac-binhex40\";\r\n    htm: string = \"text/html\";\r\n    html: string = \"text/html\";\r\n    ice: string = \"x-conference/x-cooltalk\";\r\n    ico: string = \"image/x-icon\";\r\n    ics: string = \"text/calendar\";\r\n    ief: string = \"image/ief\";\r\n    iges: string = \"model/iges\";\r\n    igs: string = \"model/iges\";\r\n    igx: string = \"application/vnd.micrografx.igx\";\r\n    indd: string = \"application/x-indesign\";\r\n    ips: string = \"application/x-ipscript\";\r\n    ipx: string = \"application/x-ipix\";\r\n    iso: string = \"application/octet-stream\";\r\n    jad: string = \"text/vnd.sun.j2me.app-descriptor\";\r\n    jar: string = \"application/java-archive\";\r\n    java: string = \"ext/x-java-source,java\";\r\n    jnlp: string = \"application/x-java-jnlp-file\";\r\n    jpe: string = \"image/jpg\";\r\n    jpeg: string = \"image/jpg\";\r\n    jpg: string = \"image/jpg\";\r\n    jpgv: string = \"video/jpg\";\r\n    jpm: string = \"video/jpm\";\r\n    js: string = \"application/x-javascript\";\r\n    json: string = \"application/json\";\r\n    jsp: string = \"text/plain\";\r\n    kar: string = \"audio/midi\";\r\n    kml: string = \"application/vnd.google-earth.kml+xml\";\r\n    kmz: string = \"application/vnd.google-earth.kmz\";\r\n    latex: string = \"application/x-latex\";\r\n    lha: string = \"application/octet-stream\";\r\n    log: string = \"text/plain\";\r\n    lsp: string = \"application/x-lisp\";\r\n    lzh: string = \"application/octet-stream\";\r\n    m: string = \"text/plain\";\r\n    m3u: string = \"audio/x-mpegurl\";\r\n    m4v: string = \"video/x-m4v\";\r\n    man: string = \"application/x-troff-man\";\r\n    mdb: string = \"application/x-msaccess\";\r\n    mdi: string = \"image/vnd.ms-modi\";\r\n    me: string = \"application/x-troff-me\";\r\n    mesh: string = \"model/mesh\";\r\n    mid: string = \"audio/midi\";\r\n    midi: string = \"audio/midi\";\r\n    mif: string = \"application/vnd.mif\";\r\n    mime: string = \"www/mime\";\r\n    mkv: string = \"video/x-matroska\";\r\n    mlp: string = \"application/vnd.dolby.mlp\";\r\n    mov: string = \"video/quicktime\";\r\n    movie: string = \"video/x-sgi-movie\";\r\n    mp2: string = \"audio/mpeg\";\r\n    mp3: string = \"audio/mpeg\";\r\n    mp4: string = \"video/mp4\";\r\n    mpe: string = \"video/mpeg\";\r\n    mpeg: string = \"video/mpeg\";\r\n    mpkg: string = \"application/vnd.apple.installer+xml\";\r\n    mpg: string = \"video/mpeg\";\r\n    mpga: string = \"audio/mpeg\";\r\n    ms: string = \"application/x-troff-ms\";\r\n    msh: string = \"model/mesh\";\r\n    mxml: string = \"audio/mpeg\";\r\n    nc: string = \"application/x-netcdf\";\r\n    oda: string = \"application/oda\";\r\n    oga: string = \"audio/ogg\";\r\n    ogv: string = \"video/ogg\";\r\n    ogx: string = \"application/ogg\";\r\n    pbd: string = \"application/vnd.powerbuilder6\";\r\n    pbm: string = \"image/x-portable-bitmap\";\r\n    pct: string = \"image/x-pict\";\r\n    pdb: string = \"chemical/x-pdb\";\r\n    pdf: string = \"application/pdf\";\r\n    pfa: string = \"application/x-font-type1\";\r\n    pgm: string = \"image/x-portable-graymap\";\r\n    pgn: string = \"application/x-chess-pgn\";\r\n    pgp: string = \"application/pgp-signature\";\r\n    php: string = \"text/plain\";\r\n    pic: string = \"image/x-pict\";\r\n    pl: string = \"text/plain\";\r\n    png: string = \"image/png\";\r\n    pnm: string = \"image/x-portable-anymap\";\r\n    pot: string = \"application/mspowerpoint\";\r\n    potx: string = \"application/vnd.openxmlformats-officedocument.presentationml.template\";\r\n    ppd: string = \"application/vnd.cups-ppd\";\r\n    ppm: string = \"image/x-portable-pixmap\";\r\n    pps: string = \"application/mspowerpoint\";\r\n    ppsx: string = \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\";\r\n    ppt: string = \"application/mspowerpoint\";\r\n    pptx: string = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\r\n    ppz: string = \"application/mspowerpoint\";\r\n    pre: string = \"application/x-freelance\";\r\n    prt: string = \"application/pro_eng\";\r\n    ps: string = \"application/postscript\";\r\n    psb: string = \"image/vnd.adobe.photoshop\";\r\n    psd: string = \"image/vnd.adobe.photoshop\";\r\n    pub: string = \"application/x-mspublisher\";\r\n    qfx: string = \"application/vnd.intu.qfx\";\r\n    qt: string = \"video/quicktime\";\r\n    qxd: string = \"application/vnd.quark.quarkxpress\";\r\n    ra: string = \"audio/x-realaudio\";\r\n    ram: string = \"audio/x-pn-realaudio\";\r\n    rar: string = \"application/x-rar-compressed\";\r\n    ras: string = \"image/cmu-raster\";\r\n    rgb: string = \"image/x-rgb\";\r\n    rm: string = \"audio/x-pn-realaudio\";\r\n    roff: string = \"application/x-troff\";\r\n    rpm: string = \"audio/x-pn-realaudio-plugin\";\r\n    rss: string = \"application/rss+xml\";\r\n    rtf: string = \"text/rtf\";\r\n    rtx: string = \"text/richtext\";\r\n    scd: string = \"application/x-msschedule\";\r\n    scm: string = \"application/x-lotusscreencam\";\r\n    ser: string = \"application/java-serialized-object\";\r\n    set: string = \"application/set\";\r\n    sgm: string = \"text/sgml\";\r\n    sgml: string = \"text/sgml\";\r\n    sh: string = \"application/x-sh\";\r\n    shar: string = \"application/x-shar\";\r\n    silo: string = \"model/mesh\";\r\n    sit: string = \"application/x-stuffit\";\r\n    sitx: string = \"application/x-stuffitx\";\r\n    skd: string = \"application/x-koan\";\r\n    skm: string = \"application/x-koan\";\r\n    skp: string = \"application/x-koan\";\r\n    skt: string = \"application/x-koan\";\r\n    smi: string = \"application/smil\";\r\n    smil: string = \"application/smil\";\r\n    snd: string = \"audio/basic\";\r\n    sol: string = \"application/solids\";\r\n    spl: string = \"application/x-futuresplash\";\r\n    src: string = \"application/x-wais-source\";\r\n    step: string = \"application/STEP\";\r\n    stl: string = \"application/SLA\";\r\n    stp: string = \"application/STEP\";\r\n    sv4cpio: string = \"application/x-sv4cpio\";\r\n    sv4crc: string = \"application/x-sv4crc\";\r\n    svg: string = \"image/svg+xml\";\r\n    swf: string = \"application/x-shockwave-flash\";\r\n    t: string = \"application/x-troff\";\r\n    tar: string = \"application/x-tar\";\r\n    tcl: string = \"application/x-tcl\";\r\n    tex: string = \"application/x-tex\";\r\n    texi: string = \"application/x-texinfo\";\r\n    texinfo: string = \"application/x-texinfo\";\r\n    tif: string = \"image/tiff\";\r\n    tiff: string = \"image/tiff\";\r\n    torrent: string = \"application/x-bittorrent\";\r\n    tr: string = \"application/x-troff\";\r\n    tsi: string = \"audio/TSP-audio\";\r\n    tsp: string = \"application/dsptype\";\r\n    tsv: string = \"text/tab-separated-values\";\r\n    ttf: string = \"application/x-font-ttf\";\r\n    txt: string = \"text/plain\";\r\n    unv: string = \"application/i-deas\";\r\n    ustar: string = \"application/x-ustar\";\r\n    vcd: string = \"application/x-cdlink\";\r\n    vcf: string = \"text/x-vcard\";\r\n    vcs: string = \"text/x-vcalendar\";\r\n    vda: string = \"application/vda\";\r\n    viv: string = \"video/vnd.vivo\";\r\n    vivo: string = \"video/vnd.vivo\";\r\n    vrml: string = \"model/vrml\";\r\n    vsd: string = \"application/vnd.visio\";\r\n    wav: string = \"audio/x-wav\";\r\n    weba: string = \"audio/webm\";\r\n    webm: string = \"video/webm\";\r\n    wm: string = \"video/x-ms-wm\";\r\n    wma: string = \"audio/x-ms-wma\";\r\n    wmd: string = \"application/x-ms-wmd\";\r\n    wmf: string = \"application/x-msmetafile\";\r\n    wml: string = \"text/vnd.wap.wml\";\r\n    wmlc: string = \"application/vnd.wap.wmlc\";\r\n    wmls: string = \"text/vnd.wap.wmlscript\";\r\n    wmv: string = \"video/x-ms-wmv\";\r\n    wmx: string = \"video/x-ms-wmx\";\r\n    woff: string = \"application/x-font-woff\";\r\n    wpd: string = \"application/vnd.wordperfect\";\r\n    wpl: string = \"application/vnd.ms-wpl\";\r\n    wps: string = \"application/vnd.ms-works\";\r\n    wri: string = \"application/x-mswrite\";\r\n    wrl: string = \"model/vrml\";\r\n    wsdl: string = \"application/wsdl+xml\";\r\n    wvx: string = \"video/x-ms-wvx\";\r\n    xap: string = \"application/x-silverlight-app\";\r\n    xbm: string = \"image/x-xbitmap\";\r\n    xdp: string = \"application/vnd.adobe.xdp+xml\";\r\n    xfdf: string = \"application/vnd.adobe.xfdf\";\r\n    xhtml: string = \"application/xhtml+xml\";\r\n    xif: string = \"image/vnd.xiff\";\r\n    xlam: string = \"application/vnd.ms-excel.addin.macroenabled.12\";\r\n    xlc: string = \"application/vnd.ms-excel\";\r\n    xll: string = \"application/vnd.ms-excel\";\r\n    xlm: string = \"application/vnd.ms-excel\";\r\n    xls: string = \"application/vnd.ms-excel\";\r\n    xlsb: string = \"application/vnd.ms-excel.sheet.binary.macroenabled.12\";\r\n    xlsm: string = \"application/vnd.ms-excel.sheet.macroEnabled.12\";\r\n    xlsx: string = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n    xltm: string = \"application/vnd.ms-excel.template.macroenabled.12\";\r\n    xlw: string = \"application/vnd.ms-excel\";\r\n    xml: string = \"application/xml\";\r\n    xpm: string = \"image/x-xpixmap\";\r\n    xps: string = \"application/vnd.ms-xpsdocument\";\r\n    xslt: string = \"application/xslt+xml\";\r\n    xul: string = \"application/vnd.mozilla.xul+xml\";\r\n    xwd: string = \"image/x-xwindowdump\";\r\n    xyz: string = \"chemical/x-pdb\";\r\n    yaml: string = \"text/yaml\";\r\n    zip: string = \"application/zip\";\r\n\r\n    constructor() { super({}); }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class ParamsMalt extends Malt {\r\n\r\n    action: string                  = \"\";\r\n    mode: string                    = \"skin\";\r\n    search: boolean                 = false;\r\n    route: string                   = \"\";\r\n    flags: boolean                  = false; \r\n    task: string                    = \"\";\r\n    nonce: number                   = 0;\r\n    jwt: string                     = \"\";\r\n    format: string                  = \"\";\r\n    keywords: string                = \"\";\r\n\r\n    constructor(o: {[key: string]: any} = {}) { super(o); }\r\n}","import Malt from \"../malt\";\r\nimport { QueryMaltInterface } from '../../interfaces/malts/query';\r\nimport FiltersMalt from './filters';\r\nimport { FiltersMaltInterface } from '../../interfaces/malts/filters';\r\n\r\nexport default class QueryMalt extends Malt implements QueryMaltInterface {\r\n\r\n  row: {[key: string]: any}\t\t\t\t  = {};\r\n  rows: {[key: string]: any}[]\t\t\t= [];\r\n  recordcount: number          \t\t\t= 0;\r\n  filters: FiltersMaltInterface\t\t  = new FiltersMalt();\r\n  sql: string \t\t\t\t\t\t\t        = '';\r\n  menus: {[key: string]: any} \t\t\t= {};\r\n  columns: {[key: string]: any}[]\t\t= [];\r\n\r\n  constructor() { super({}); }\r\n\r\n  calculateRecordcount(): void { this.recordcount = this.rows.length; }\r\n\r\n  setSail(s: {[key: string]: any}): void {\r\n\t  if(s.hasProperty('filters')) { this.filters.mergeProperties(s.filters); }\r\n\t\tif(s.hasProperty('rows')) { this.setRows(s.rows); }\r\n\t}\r\n\r\n\tsetRows(a: {[key: string]: any}[]): void {\r\n\t\tthis.rows = a;\r\n\t\tthis.calculateRecordcount();\r\n\t}\r\n\r\n}","import Malt from '../malt';\r\nimport { RouteMaltInterface } from '../../interfaces/malts/route';\r\n\r\nexport default class RouteMalt extends Malt implements RouteMaltInterface {\r\n\r\n    id: string;\r\n    title: string; \r\n    format: string; \r\n    section: string; \r\n    handler: string; \r\n    level: number;\r\n\r\n    constructor(id: string, title: string, format: string, level: number) {\r\n        super({});\r\n        this.id = id;\r\n        this.title = title;\r\n        this.format = format;\r\n        this.level = level;     \r\n        const a = this.id.split('_');\r\n        this.handler = a[a.length-1];\r\n        this.section = \"\";\r\n        for(let i=0; i<a.length-1; i++) {\r\n            if(i > 0) { this.section += \"_\"; }\r\n            this.section += a[i];\r\n        }\r\n    }\r\n\r\n}","import Malt from '../malt';\r\nimport { SectionMaltInterface } from '../../interfaces/malts/section';\r\n\r\nexport default class SectionMalt extends Malt implements SectionMaltInterface {\r\n\r\n    id: string;\r\n    parent: string;\r\n    title: string;\r\n    icon: string;\r\n    primary: string;\r\n    foreign: string;\r\n\r\n    constructor(id: string, parent: string = '', title: string, icon: string = '', primary: string, foreign: string = '') {\r\n        super({});\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.title = title;\r\n        this.icon = icon;\r\n        this.primary = primary;\r\n        this.foreign = foreign;\r\n    }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class ShareMalt extends Malt {\r\n\r\n    share_pool:string\t\t= '';\r\n    share_account: string   = '';\r\n    share_amount: number    = 0;\r\n    share_coin: number      = 0;\r\n    share_counter: number\t= 0;\r\n\r\n    constructor() { super({}); }\r\n\r\n}","import Malt from \"../malt\";\r\n\r\nexport default class TradeMalt extends Malt {\r\n\r\n    trade_id: string\t\t\t\t\t= '';\r\n    trade_type: string\t\t\t\t\t= '';\r\n    trade_date: string\t\t\t\t\t= this.getDateNow();\r\n    trade_offer: string\t\t\t\t\t= '';\r\n    trade_seller: string\t\t\t\t= '';\r\n    trade_buyer: string\t\t\t\t\t= '';\r\n    trade_price: number\t\t\t\t\t= 0;\r\n    base_offer: string\t\t\t\t\t= '';\r\n    base_pool: string\t\t\t\t\t= '';\r\n    base_account: string\t\t\t\t= '';\r\n    base_coin: string\t\t\t\t\t= '';\r\n    base_alpha: string\t\t\t\t\t= '';\r\n    base_code: string\t\t\t\t\t= '';\r\n    base_issuer: string\t\t\t\t\t= '';\r\n    base_amount: number\t\t\t\t\t= 0;\r\n    counter_offer: string\t\t\t\t= '';\r\n    counter_pool: string\t\t\t\t= '';\r\n    counter_account: string\t\t\t\t= '';\r\n    counter_coin: string\t\t\t\t= '';\r\n    counter_alpha: string\t\t\t\t= '';\r\n    counter_issuer: string\t\t\t\t= '';\r\n    counter_amount: number\t\t\t\t= 0;\r\n    \r\n    constructor() { super({}); }\r\n\r\n\tmenuTradeTypes() { return {orderBook: 'Order Book', liquidityPool: 'Liquidity Pool'}; }\r\n\r\n}"],"mappings":"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","names":["p","p","e"]}